<?xml version="1.0" encoding="utf-8"?> <?xml-stylesheet type="text/xml" href="/blog/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"> <generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://www.monkeypatch.io/en/blog/feed.xml" rel="self" type="application/atom+xml"/><link href="http://www.monkeypatch.io/en/" rel="alternate" type="text/html" hreflang="en"/> <updated>2018-12-16T13:34:23+00:00</updated> <id>http://www.monkeypatch.io/en/</id><title>MonkeyPatch - Expertise Informatique</title> <subtitle>Soci√©t√© de conseil et d'expertise en informatique sp√©cialis√©e dans les nouvelles technologies.</subtitle> <entry xml:lang="fr"><title>Dev &amp;amp; retro-gaming avec TIC-80</title><link href="http://www.monkeypatch.io/en/2018/12/16/TIC80.html" rel="alternate" type="text/html" title="Dev &amp; retro-gaming avec TIC-80"/> <published>2018-12-16T00:00:00+00:00</published> <updated>2018-12-16T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/12/16/TIC80</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/12/16/TIC80.html">&lt;p&gt;Cette ann√©e, MonkeyPatch a souhait√© soutenir le &lt;a href="https://devfesttoulouse.fr/"&gt;DevFest Toulouse&lt;/a&gt;. √Ä cette occasion, nous nous sommes r√©unis pour savoir ce qu‚Äôon allait pr√©parer pour notre stand.&lt;/p&gt;&lt;p&gt;On s‚Äôest tr√®s vite entendu pour faire des kak√©s de l‚Äô√©quipe et mettre en avant notre passion du d√©v.&lt;/p&gt;&lt;p&gt;Nous avons √©galement d√©cid√© de mettre en place un petit &lt;a href="http://game.monkeypatch.io/"&gt;quiz&lt;/a&gt; et un jeu r√©tro (le th√®me du DevFest de cette ann√©e). C‚Äô√©tait d√©cid√©, on allait mettre une borne arcade r√©tro !&lt;/p&gt;&lt;!--more--&gt;&lt;p&gt;Mais avoir une borne r√©tro du commerce ne nous emballait pas vraiment. On a donc pr√©f√©r√© s‚Äôen faire un do-it-yourself.&lt;/p&gt;&lt;p&gt;Passionn√© depuis ma jeunesse par les jeux vid√©o, et ayant quelques petits projets de jeux √† mon actif, c‚Äôetait l‚Äôoccasion r√™v√©e de cr√©er une exp√©rience fun de retro-gaming, et de s‚Äô√©clater en codant !&lt;/p&gt;&lt;p&gt;Aid√© par le reste de l‚Äô√©quipe pour faire la structure et brancher les commandes, j‚Äôai pu essentiellement me concentrer sur le code.&lt;/p&gt;&lt;p&gt;Apr√®s un bon jus de neurones et quelques jus de coco on a imagin√© Super Monkey Ball, un jeu m√™lant casse-brique et pong, dans un univers d√©jant√© de monkeys 8-bits.&lt;/p&gt;&lt;p&gt;Reste alors le choix d‚Äôune techno pour mettre cela en place rapidement ‚Ä¶ Il existe de tr√®s bons choix, tels que &lt;a href="http://libgdx.badlogicgames.com/"&gt;LibGDX&lt;/a&gt; qui est une excellent framework pour d√©velopper des jeux multi-plateformes avec les langages de la JVM.&lt;/p&gt;&lt;p&gt;Mais c‚Äôest en tombant sur le &lt;a href="https://tic.computer"&gt;TIC-80&lt;/a&gt;, une machine virtuelle d√©di√©e √† la cr√©ation de jeux r√©tro, que l‚Äôon a eu un vrai coup de coeur !&lt;/p&gt;&lt;p&gt;Le TIC-80 fait partie de la famille des consoles ‚Äúimaginaires‚Äù, en anglais ‚Äúfantasy console‚Äù et va nous permettre de cr√©er, jouer et partager des jeux r√©tro 8-bit.&lt;/p&gt;&lt;p&gt;Les sp√©cifications de la machine font r√™ver (ou pas) :&lt;/p&gt;&lt;ul&gt; &lt;li&gt;DISPLAY 240x136 pixels, 16 colors palette&lt;/li&gt; &lt;li&gt;INPUT 2 gamepads with 8 buttons / mouse&lt;/li&gt; &lt;li&gt;SPRITES 256 8x8 foreground sprites and 256 8x8 background tiles&lt;/li&gt; &lt;li&gt;MAP 240x136 cells, 1920x1088 pixels&lt;/li&gt; &lt;li&gt;SOUND 4 channels with configureable waveforms&lt;/li&gt; &lt;li&gt;CODE 64KB of Lua or Moonscript or JavaScript or Wren or Fennel&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Alors pourquoi s‚Äôemb√™ter avec les limitations d‚Äôune autre √©poque ?&lt;/p&gt;&lt;p&gt;Tout d‚Äôabord, TIC-80 va nous fournir tous les outils de d√©veloppements int√©gr√©s dans la machine elle m√™me : √©diteur de code, de sprites, de map, d‚Äôeffets sonores et de musique.&lt;/p&gt;&lt;p&gt;&lt;img src="https://i.ytimg.com/vi/w8tAcsB3Nhs/maxresdefault.jpg" alt="" /&gt; &lt;em&gt;L‚Äô√©diteur de sprite du TIC-80, pour l‚Äôartiste 8-bit qui est en vous.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Pour ceux qui, comme moi, ont commenc√© l‚Äôinformatique avec un Amstrad, Commodore, VIC ou BBC Micro, ‚Ä¶ On retrouve, avec nostalgie, ce c√¥t√© magique de rentrer quelques lignes de BASIC et de voir appara√Ætre une animation, un texte interactif ou un petit jeu.&lt;/p&gt;&lt;p&gt;Ici point de BASIC et de GOTO, mais du &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; qui va nous permettre d‚Äô√©crire rapidement notre jeu. Car la grande force de TIC-80 est de pouvoir tr√®s rapidement prototyper son jeu 8-bit gr√¢ce aux fonctions int√©gr√©es qui permettent tr√®s facilement de dessiner des sprites, des formes simples, tracer la map, jouer des sons, etc ‚Ä¶&lt;/p&gt;&lt;p&gt;La r√©f√©rence compl√®te des fonctions est disponible &lt;a href="https://github.com/nesbox/TIC-80/wiki/Home#special-functions"&gt;ici&lt;/a&gt; et on dispose d‚Äôune grande partie de la librairie standard Lua.&lt;/p&gt;&lt;p&gt;Il n‚Äôy a donc pas √† se soucier d‚Äôinterop√©rabilit√© entre les plateformes, ou √† comprendre une API avanc√©e, on va directement √† l‚Äôessentiel en se concentrant sur le gameplay de notre jeu.&lt;/p&gt;&lt;p&gt;&lt;img src="https://i.imgur.com/SV1bpfy.png" alt="" /&gt; &lt;em&gt;L‚Äô√©diteur de code du TIC-80 va d√©velopper votre cr√©ativit√© (ou votre myopie)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Pour faire un jeu simple, on impl√©mente la fonction TIC qui est appel√©e toutes les 16ms avec notre logique de jeu et code de dessin.&lt;/p&gt;&lt;p&gt;D‚Äôautre part, ces limitations vont nous pousser √† utiliser les ressources de la machine de mani√®re cr√©ative et nous inciter √† garder notre gameplay simple. TIC-80 est notamment inspir√© de &lt;a href="https://www.lexaloffle.com/pico-8.php"&gt;Pico-8&lt;/a&gt;, son pr√©curseur, qui impose des limites encore plus drastiques !&lt;/p&gt;&lt;p&gt;Ainsi apr√®s quelques heures de codage et du dessin en pixel-art un peu douteux fut n√©e la premi√®re mouture de &lt;a href="https://tic.computer/play?cart=685"&gt;Super Monkey Ball&lt;/a&gt; !&lt;/p&gt;&lt;p&gt;Apr√®s une phase de &lt;del&gt;jeux&lt;/del&gt; tests acharn√©s par les monkeys, nous √©tions enfin pr√™ts!&lt;/p&gt;&lt;p&gt;&lt;img src="https://i.imgur.com/cwAyiUR.jpg" alt="" /&gt; &lt;em&gt;En mati√®re de jeu, tester n‚Äôest pas douter !&lt;/em&gt;&lt;/p&gt;&lt;p&gt;J‚Äôesp√®re que cet article vous aura donn√© envie d‚Äôessayer le TIC-80. Il y a de nombreux jeux sympa √† essayer sur leur site, ou en utilisant la fonction &lt;code class="highlighter-rouge"&gt;surf&lt;/code&gt; int√©gr√©e, n‚Äôh√©sitez pas √† partager vos cr√©ations ‚Ä¶&lt;/p&gt;&lt;p&gt;Pour ceux qui ont envie d‚Äôy jouer en ligne, vous retrouverez la ‚Äúcassette‚Äù de Super Monkey Ball sur le &lt;a href="https://tic.computer/play?cart=685"&gt;site officiel&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Code üíª, Love ‚ù§Ô∏è &amp;amp; Bananas üçå !&lt;/p&gt;</content> <author> <name>Alexandre Delattre</name> <email>alexandre@monkeypatch.io</email> </author> <category term="devfest"/> <category term="retro"/> <category term="gaming"/> <category term="dev"/> <category term="code"/> <category term="tic80"/> <category term="console"/> <summary>Cette ann√©e, MonkeyPatch a souhait√© soutenir le DevFest Toulouse. √Ä cette occasion, nous nous sommes r√©unis pour savoir ce qu‚Äôon allait pr√©parer pour notre stand.On s‚Äôest tr√®s vite entendu pour faire des kak√©s de l‚Äô√©quipe et mettre en avant notre passion du d√©v.Nous avons √©galement d√©cid√© de mettre en place un petit quiz et un jeu r√©tro (le th√®me du DevFest de cette ann√©e). C‚Äô√©tait d√©cid√©, on allait mettre une borne arcade r√©tro !</summary> <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://pbs.twimg.com/card_img/1052182719885664256/PHMhJ05N?format=jpg&name=600x314"/> </entry> <entry xml:lang="en"><title>Lambda World Cadiz 2018 - A Review</title><link href="http://www.monkeypatch.io/en/2018/12/04/Lambda-World-Cadiz-2018.html" rel="alternate" type="text/html" title="Lambda World Cadiz 2018 - A Review"/> <published>2018-12-04T00:00:00+00:00</published> <updated>2018-12-04T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/12/04/Lambda-World-Cadiz-2018</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/12/04/Lambda-World-Cadiz-2018.html">&lt;p&gt;The Spanish city of &lt;a href="https://en.wikipedia.org/wiki/C%C3%A1diz"&gt;C√°diz&lt;/a&gt; is an amazing place, with a great history (from Roman ruins, to the &lt;a href="https://en.wikipedia.org/wiki/Spanish_Constitution_of_1812"&gt;first Spanish constitution&lt;/a&gt; which was written there back in 1812). It is a great location choice for the &lt;a href="http://www.lambda.world/"&gt;Lambda World conference&lt;/a&gt;, although a quite remote one. Due to train troubles following the recent Aude flooding back here in France, I missed the first morning unconference and the first workshop (which I sorely regretted since I highly awaited to attend the &lt;a href="https://eta-lang.org/"&gt;eta-lang&lt;/a&gt; workshop). &lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;The welcoming staff was amazing, the food was good, and globally the ambiance was warm. The audience was fine too, but I keep being amazed by the carelessness of some people, for instance not caring about the talks and working on their own projects, or sitting at the very end of a row, blocking all the middle seats, even failing to comply when staff members asked repeatedly to ‚Äúdefragment‚Äù the seating positions.&lt;/p&gt;&lt;p&gt;The conference had a pretty well stuffed &lt;a href="http://cadiz.lambda.world/schedule"&gt;schedule&lt;/a&gt; and the choices were often hard to make. In order to keep this article not too long, I will only pick a few highlights, but all the presentations I had the chance to see were of good quality.&lt;/p&gt;&lt;hr /&gt;&lt;h1 id="workshops"&gt;Workshops&lt;/h1&gt;&lt;h2 id="liquid-haskell-workshop"&gt;Liquid Haskell Workshop&lt;/h2&gt;&lt;p&gt;I first attended the &lt;a href="https://wiki.haskell.org/Liquid_Haskell"&gt;Liquid Haskell&lt;/a&gt; workshop, by &lt;a href="https://twitter.com/janschultecom"&gt;Jan Schulte&lt;/a&gt; and &lt;a href="https://twitter.com/adriangonzl"&gt;Adri√°n Gonz√°lez&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Liquid Haskell is a kind of layer of &lt;a href="https://en.wikipedia.org/wiki/Satisfiability_modulo_theories"&gt;predicate logic&lt;/a&gt; over Haskell, allowing the type checker to verify properties.&lt;/p&gt;&lt;p&gt;In order to provide these properties, you write some &lt;code class="highlighter-rouge"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;-@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@-&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt; comments, and liquid Haskell interprets them and verifies them.&lt;/p&gt;&lt;p&gt;The workshop ‚Äúspirit‚Äù was themed with alcoholic beverages: develop a simple model of glasses, shakers and cocktail recipes, and provide more type checking with liquid Haskell. For instance, if you define this datatype of shakers:&lt;/p&gt;&lt;div class="language-haskell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="kr"&gt;data&lt;/span&gt; &lt;span class="kt"&gt;Shaker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Boston&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;French&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;Cobbler&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;p&gt;you can assign volumes to them with liquid Haskell like this:&lt;/p&gt;&lt;div class="language-haskell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2 3 4 5 6&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="cm"&gt;{-@ type ShakerR S = { v: Shaker | S == volume v } @-}&lt;/span&gt; &lt;span class="cm"&gt;{-@ measure volume @-}&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Shaker&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="kt"&gt;Boston&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="kt"&gt;French&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="kt"&gt;Cobbler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;p&gt;What this &lt;em&gt;means&lt;/em&gt; would be:&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Let‚Äôs have some type &lt;code class="highlighter-rouge"&gt;ShakerR&lt;/code&gt; which takes an &lt;code class="highlighter-rouge"&gt;Int&lt;/code&gt; as a parameter. Let‚Äôs call this &lt;code class="highlighter-rouge"&gt;Int&lt;/code&gt; ‚Äú&lt;code class="highlighter-rouge"&gt;S&lt;/code&gt;‚Äù. Now when you have a &lt;code class="highlighter-rouge"&gt;Shaker&lt;/code&gt; value, you can infer a &lt;code class="highlighter-rouge"&gt;ShakerR&lt;/code&gt; whose value for &lt;code class="highlighter-rouge"&gt;S&lt;/code&gt; is given by the measure function named &lt;code class="highlighter-rouge"&gt;volume&lt;/code&gt;, applied to the &lt;code class="highlighter-rouge"&gt;Shaker&lt;/code&gt; value you have.&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;This allows to lift values to the type level, and then write predicates which will ensure some properties on these values.&lt;/p&gt;&lt;p&gt;Liquid Haskell also allows some totality checking, which is quite nifty.&lt;/p&gt;&lt;p&gt;The workshop went at a nice pace, and went as far as defining alcoholic beverage recipes and verifying they could actually be done in a given shaker (by verifying that the mixed ingredients had a combined volume lower than the shaker‚Äôs).&lt;/p&gt;&lt;hr /&gt;&lt;h1 id="keynotes"&gt;Keynotes&lt;/h1&gt;&lt;h2 id="diagrammatic-execution-models"&gt;Diagrammatic execution models&lt;/h2&gt;&lt;p&gt;[&lt;a href="https://www.youtube.com/watch?v=sgmpVedCsNM"&gt;video&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.cs.bham.ac.uk/~kxm538/"&gt;Koko Muroya&lt;/a&gt; and &lt;a href="http://www.cs.bham.ac.uk/~wtc488/"&gt;Steven Cheung&lt;/a&gt;, working under the direction of &lt;a href="https://twitter.com/danghica"&gt;Dan Ghica&lt;/a&gt;, gave a fantastic overview of their work on diagrammatic execution model. This keynote was somewhat on the theoric side, and applied to standard untyped Œª-calculus (but hey, that‚Äôs where it all began).&lt;/p&gt;&lt;p&gt;There is a nice demo of their work &lt;a href="https://koko-m.github.io/GoI-Visualiser/"&gt;hosted on github&lt;/a&gt;, which was used during the presentation.&lt;/p&gt;&lt;p&gt;In Œª-calculus, just like in any programming context, you need an &lt;a href="https://en.wikipedia.org/wiki/Evaluation_strategy"&gt;evaluation strategy&lt;/a&gt; of a program. There are several such strategies (for instance Haskell is lazy, and uses ‚Äúcall by need‚Äù strategy, whereas OCaml is strict and uses ‚Äúcall by value‚Äù strategy). Muroya and Cheung‚Äôs presentation was on representing programs as diagrams, and then transform these diagrams using specific rewriting rules, depending on the strategy. This allows to visualize (and compare visually) how different strategies perform for a given problem in several dimensions (space, time, depths, etc.).&lt;/p&gt;&lt;p&gt;In order to determine how to rewrite the program diagram, one must enrich it with a focus on one of the wires of the diagram (the focus is located at the red wire in the demo). Choosing where to put the focus first, and then how to reposition it after rewrites is a whole part of the strategy. When asked, Koko Muroya confirmed that the language described could be extended to simply typed Œª-calculus by attaching types to the diagram wires.&lt;/p&gt;&lt;p&gt;Applied category theory is &lt;a href="http://www.compositionality-journal.org/"&gt;booming&lt;/a&gt; right now, and this work led me to wonder if they were considering describing their work in a categoretic way (yes, it seems). Some of the demos they showed were reminiscent of &lt;a href="https://github.com/chorasimilarity/chemlambda-gui/blob/gh-pages/dynamic/README.md"&gt;chemlambda&lt;/a&gt;: a graph evolving given rewriting rules (which incidently provided the illustration for &lt;a href="https://johncarlosbaez.wordpress.com/2018/10/02/applied-category-theory-2019/"&gt;the ACT 2019 announcement&lt;/a&gt;).&lt;/p&gt;&lt;h2 id="how-does-code-sound"&gt;How does code sound?&lt;/h2&gt;&lt;p&gt;[&lt;a href="https://www.youtube.com/watch?v=q5wJtk5Afck"&gt;video&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;This presentation by &lt;a href="https://twitter.com/felienne"&gt;Felienne Hermans&lt;/a&gt;, in a huge spoiling nutshell:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Felienne is interested in spreadsheets as a good model for FRP (by the way, &lt;a href="https://wiki.haskell.org/FRP_explanation_using_reactive-banana"&gt;this tutorial on FRP in Haskell&lt;/a&gt; agrees, and &lt;a href="https://github.com/snowleopard/build"&gt;this recent paper and code&lt;/a&gt; about build systems, by famous people, provides another good take on spreadsheets as serious stuff as well),&lt;/li&gt; &lt;li&gt;elitist programmers reject her work as ‚Äúnot real programming‚Äù,&lt;/li&gt; &lt;li&gt;Felienne turns to teaching programming to kids, and reads Piaget, questions how the young learn to code,&lt;/li&gt; &lt;li&gt;Felienne meets &lt;a href="https://twitter.com/birdsncherries"&gt;Alexandra&lt;/a&gt; and they merge art and code, and code and art ; and they think about how to talk about code by translating programs into poems,&lt;/li&gt; &lt;li&gt;Felienne sees that people don‚Äôt agree on how to pronounce code out loud,&lt;/li&gt; &lt;li&gt;Felienne digs and finds that generally, having a consistent way to pronounce things helps learning them,&lt;/li&gt; &lt;li&gt;Felienne suggests that we should agree on ways to pronounce operators and language constructs as this would make it then easier to learn and share, &lt;em&gt;especially&lt;/em&gt; for visually impaired people who rely on automatic text to speech translation, but not only for them.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Ok, I‚Äôm convinced, but let‚Äôs go further, we need a phonology per natural language, &lt;em&gt;n‚Äôest-ce pas ?&lt;/em&gt;&lt;/p&gt;&lt;hr /&gt;&lt;h1 id="regular-talks"&gt;Regular talks&lt;/h1&gt;&lt;h2 id="what-haskell-taught-us-while-we-were-not-looking"&gt;What Haskell taught us while we were not looking&lt;/h2&gt;&lt;p&gt;[&lt;a href="https://www.youtube.com/watch?v=Pmhap3acJvs"&gt;video&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;In this talk, &lt;a href="https://twitter.com/etorreborre"&gt;Eric Torreborre&lt;/a&gt; did not intend to talk about Haskell itself, but what its influence has been on other languages. (In the end however, a lot of stuff in the talk is still about Haskell proper.)&lt;/p&gt;&lt;p&gt;He first describes his journey from C++, to the Java world, to the Ruby/Groovy fad, to Scala, and finally to Haskell, which he now uses daily at work.&lt;/p&gt;&lt;p&gt;Eric then highlights two salient features or Haskell: laziness and purity Eric proceeds with talking about data, and immutability, concluding that Haskell has smart functions and dumb data (&lt;em&gt;although we may highlight that functions &lt;strong&gt;are&lt;/strong&gt; also data in Haskell&lt;/em&gt;).&lt;/p&gt;&lt;p&gt;An interesting thing is when Eric talks about objects (as in Object Oriented): he presents them as state machines (as they hold some state), and how it is hard to reason about several of them interacting. The exact same point is done from the other angle later in the talk about Elixir, where state machines interacting is actually promoted: the emergent behavior being, sometimes, the right level of abstraction, and the desired effect.&lt;/p&gt;&lt;p&gt;Then Eric talks about types. He reminds the audience how Java generics were designed by, among others, Wadler, and how generics were hard to make in Java because of subtyping, making type inference undecidable ; also quoting &lt;a href="https://dl.acm.org/citation.cfm?id=3009882"&gt;Dolan and Mycroft 2017&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Eric ends his talks with the ‚Äúless good‚Äù stuff in Haskell:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;not very user-friendly documentation,&lt;/li&gt; &lt;li&gt;lack of proper modules (although backpack, and the yet hardly implemented &lt;a href="https://www.microsoft.com/en-us/research/publication/first-class-modules-for-haskell/"&gt;Shields and Peyton Jones 2002&lt;/a&gt;),&lt;/li&gt; &lt;li&gt;the occasional bad mix of garbage collection and laziness,&lt;/li&gt; &lt;li&gt;the record namespace problem (&lt;em&gt;by the way nicely solved by Idris, with get/set lenses kinda built-in too&lt;/em&gt;),&lt;/li&gt; &lt;li&gt;and the lack of proper IDEs (&lt;em&gt;even though &lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;&lt;code class="highlighter-rouge"&gt;hie&lt;/code&gt;&lt;/a&gt; advances with large strides&lt;/em&gt;).&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;A very engaging presentation overall, informative and fun without overdoing the comedy.&lt;/p&gt;&lt;h2 id="the-complexity-trap-think-before-you-leap"&gt;The Complexity Trap: Think Before You Leap&lt;/h2&gt;&lt;p&gt;[&lt;a href="https://www.youtube.com/watch?v=Pmhap3acJvs"&gt;video&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;So the presentation starts, like many others during the conference, with the notion of complexity (etymologically &lt;em&gt;made of several parts&lt;/em&gt;). In order to avoid complexity, we often jump on seemingly attractive abstractions, but may fall in complexity traps:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;neglecting the cost of the abstraction (and moving the complexity at a different layer),&lt;/li&gt; &lt;li&gt;embracing the industry standards/latest fads, which may be misguided in the context (like abstracting over monads may be interesting in library code, but not really in business code),&lt;/li&gt; &lt;li&gt;foregoing the abstraction altogether (like using a nice functional library in eventually imperative business code).&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Daniel then pleas for more exposure to tradeoffs and boring solutions: conferences and blog posts should not focus solely on the new and shiny, but leave room to the ugly that represents most of our daily routine anyway.&lt;/p&gt;&lt;p&gt;As tools to help in this daily routine, Daniel refers to classical root cause analysis, but also to &lt;a href="http://aim42.github.io/"&gt;aim42&lt;/a&gt;, a ‚Äúcollection of practices and patterns to support software evolution, modernization, maintenance, migration and improvement of software systems‚Äù.&lt;/p&gt;&lt;p&gt;All in all, a nice talk by &lt;a href="https://twitter.com/kaffeecoder"&gt;Daniel Westheide&lt;/a&gt;. The presentation was boring (as was humorously noted by a member of the audience during the Q/A session), which gives it even more value in my opinion (&lt;a href="https://en.wikipedia.org/wiki/Principle_of_explosion"&gt;coherence matters&lt;/a&gt;). Everything in engineering is neither shiny nor exciting, and conferences are not holidays at the beach (even though Cadiz‚Äô is beautiful).&lt;/p&gt;&lt;p&gt;Two quotes from the end of the talk that I wish to keep in mind more often:&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Projects do not fail for lack of higher kinded types, but because of architecture, politics, etc.&lt;/p&gt; &lt;/blockquote&gt;&lt;blockquote&gt; &lt;p&gt;As software engineers, our job is to solve problems, not to write code.&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="also"&gt;Also‚Ä¶&lt;/h2&gt;&lt;p&gt;Some of the talks are better suited for watching than commenting. For those inclined in the topics, special mentions to:&lt;/p&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://twitter.com/whatyouhide"&gt;Andre Leopardi&lt;/a&gt;‚Äôs &lt;a href="https://www.youtube.com/watch?v=e3O0R5_69Pg"&gt;presentation&lt;/a&gt; about &lt;em&gt;&lt;a href="https://elixir-lang.org/"&gt;Elixir&lt;/a&gt; - functional, concurrent, distributed programming for the rest of us&lt;/em&gt;, providing the reasons why the Elixir platform has been designed as it is,&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://twitter.com/itrvd"&gt;Itamar Ravid&lt;/a&gt;‚Äôs presentation entitled &lt;em&gt;Boring use cases for exciting types&lt;/em&gt;, explaining in detail some use cases for &lt;code class="highlighter-rouge"&gt;WriterT&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;IxStateT&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;Codensity&lt;/code&gt;,&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://twitter.com/Dinoosaure"&gt;Romain Calascibetta&lt;/a&gt;‚Äôs presentation about &lt;em&gt;&lt;a href="https://mirage.io/"&gt;MirageOS&lt;/a&gt;, towards a smaller and safer OS&lt;/em&gt; ; an ambitious OS written in OCaml, focused on modularity and security.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://twitter.com/owickstrom"&gt;Oskar Wickstr√∂m&lt;/a&gt;‚Äôs &lt;a href="https://www.youtube.com/watch?v=psasUATsjQw"&gt;presentation&lt;/a&gt; about the ‚Äúyack-shave of his life‚Äù (as he called it himself): &lt;em&gt;Writing a &lt;a href="https://owickstrom.github.io/komposition/"&gt;Screencast Video Editor&lt;/a&gt; in Haskell&lt;/em&gt;, which is a great return on experience on writing a useful, non trivial program in Haskell.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;hr /&gt;&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;&lt;p&gt;The conference was well balanced between very practical presentations, some more theoric, some more poetic or philosophical.&lt;/p&gt;&lt;p&gt;Some messages that were repeated again and again during the conference:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;watch out for accidental complexity,&lt;/li&gt; &lt;li&gt;find the right level of abstraction to solve your problem,&lt;/li&gt; &lt;li&gt;don‚Äôt be an elitist dick.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;All those points are about a single same theme: be careful of the context (&lt;em&gt;i.e.&lt;/em&gt; you‚Äôre not alone).&lt;/p&gt;</content> <author> <name>Guillaume Andrieu</name> <email>guillaume@monkeypatch.io</email> </author> <category term="conf"/> <category term="FunctionalProgramming"/> <category term="LambdaWorld"/> <summary>The Spanish city of C√°diz is an amazing place, with a great history (from Roman ruins, to the first Spanish constitution which was written there back in 1812). It is a great location choice for the Lambda World conference, although a quite remote one. Due to train troubles following the recent Aude flooding back here in France, I missed the first morning unconference and the first workshop (which I sorely regretted since I highly awaited to attend the eta-lang workshop).</summary> </entry> <entry xml:lang="fr"><title>DevFest Nantes 2018 : Mission spatiale r√©ussie !</title><link href="http://www.monkeypatch.io/en/2018/11/12/DevFest-Nantes.html" rel="alternate" type="text/html" title="DevFest Nantes 2018 : Mission spatiale r√©ussie !"/> <published>2018-11-12T00:00:00+00:00</published> <updated>2018-11-12T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/11/12/DevFest-Nantes</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/11/12/DevFest-Nantes.html">&lt;p&gt;En mati√®re de conf√©rence, je n‚Äôen ai encore que trois conf√©rences au compteur : DevFest Toulouse 2017, Devoxx France 2018, et enfin DevFest Nantes 2018. Trois conf√©rences, trois villes et trois dimensions. Autant dire que j‚Äô√©tais tout √† la fois excit√© et stress√© de croquer le biscuit nantais ! &lt;!--more--&gt;&lt;/p&gt;&lt;h2 id="la-galaxie-devfest"&gt;La galaxie DevFest&lt;/h2&gt;&lt;p&gt;Les DevFest sont des conf√©rences organis√©s par les &lt;a href="https://developers.google.com/programs/community/gdg/"&gt;GDGs&lt;/a&gt; (Google Developers Groups) locaux ; mais sans affiliation directe √† Google. Tous les contenus sont accept√©s et pas uniquement des talks relatifs aux technologies et √† l‚Äôunivers de celui-ci.&lt;/p&gt;&lt;p&gt;Les √©ditions fran√ßaises sont d√©sormais au nombre de cinq : Brest, Lille, Nantes, Paris et Toulouse. L‚Äô√©dition nantaise est l‚Äôune des plus importantes au monde avec ~1800 participants par jour et 70 sessions durant 2 jours.&lt;/p&gt;&lt;h2 id="d√©collage"&gt;D√©collage&lt;/h2&gt;&lt;h3 id="pr√©paration-de-la-mission"&gt;Pr√©paration de la mission&lt;/h3&gt;&lt;p&gt;C‚Äôest le 10 juillet que je re√ßu mon ordre de mission. Pour cette premi√®re sortie spatiale, j‚Äôai eu l‚Äôimmense honneur d‚Äô√™tre retenu comme speaker pour parler de DevOps et plus particuli√®rement de &lt;a href="https://concourse-ci.org/"&gt;Concourse&lt;/a&gt;. D√®s le message de s√©lection, l‚Äôorganisation mettait tout en ≈ìuvre pour nous accompagner : mis √† disposition d‚Äôun slack et envoie d‚Äôun formulaire pour demander quelques informations sur le transport et l‚Äôh√©bergement. Je me suis senti de suite ‚Äúchouchout√©‚Äù et pr√™t √† attaquer cette mission sereinement.&lt;/p&gt;&lt;p&gt;Dans les semaines qui ont suivis, nous avons re√ßu plein d‚Äôautres informations, des questionnaires pour valider qu‚Äôon √©tait tous bien pr√™t ainsi que des templates Google slides d√©clin√© en quatre th√®mes de couleurs diff√©rentes (d√©riv√©es des quatre couleurs de Google). Sur ce dernier point, juste un petit b√©mol pour ceux qui utilisaient d‚Äôautres formats (PPTX, Reveal.js,‚Ä¶) pour leurs pr√©sentations ; mais rien de compliquer de r√©cup√©rer les diff√©rentes images de fond.&lt;/p&gt;&lt;h3 id="atterrissage-sur-la-plan√®te-nantes"&gt;Atterrissage sur la plan√®te Nantes&lt;/h3&gt;&lt;p&gt;Le jour J est arriv√© finalement assez vite, et les trois mois d‚Äôentra√Ænement ne furent pas de trop pour aborder cette mission. Nantes est vraiment proche de Toulouse, ce qui donne des billets √† prix tr√®s int√©ressants et moins d‚Äôune heure de vol ! Par ailleurs la phase de croisi√®re (apr√®s l‚Äôascension et avant la descente) dure moins de quinze minutes !&lt;/p&gt;&lt;p&gt;Horaires de vol oblige, on retrouve les autres toulousains d√®s la descente d‚Äôavion. On est accueilli par une sympathique pancarte qui nous indique la direction d√®s la r√©ception des bagages.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/fAyos4eT5o1bSLlkZaM1uL3Jxg7IMyeDyrZCPinCi5nZPH2fuLyisS9iYsGdDQK9aGWRKJeeSCimJ8fgyRwOXhcQ2Hqoo8YHYcAKtobkDBo5RylOaCqwe6L5t9T8ZH6yVGcyH0d6nH_NW1Pk5baa3uqJ8JJaduKj-JXOElJcVNxG94_yY0AtmHuHoxUw-G7C4xHGuGjO4VBNY6LurSgA9HhIYf4SNtwlhDzVZmpF6ncZ8AElledsGuaoghhPAUMnydAWYIT6NNAq8A59IQiv5TzOYh6JfOAagjp0IHzW8QUuYSoKhRCgGJNfc1FIof6EenJacD9wkoM0OlpiHP4OCYIeQFoEEDvInoPhKOiWEIf3EmnJ-z6u3b-Qgmj5iSSn5doiYBBgaYecxlk7pmVnUlEbFC1Kr6ax-eyzcX3XSM8qbAozO9befchhTm4vjY8Wg-a28hOMlr85ffxUzB3Y9TJw40ao6376JQOUjc9xWfFCd5Bh1csVAAQ0aJVXoYxrhquEfDbJ8u8hOnnB7cXQdWct8HxJOuv8hwE0qMCXPDz5d5aKBa8BE3PaAoKECGEYb3oQSXxdqHYPLVO4WLhAsS676pJq4LHgnzU_zvzpYtLzbAfQTmFdRGy4auXjs-KSk25NbQI-DUzALyUfUHVHDG0=w1755-h987-no" alt="Panneau DevFest Nantes √† l'a√©roport" /&gt;&lt;/p&gt;&lt;p&gt;Un petit tour de navette et vingt minutes plus tard, nous voil√† arriver au pied de l‚Äôh√¥tel ; et aussi de la cit√© des congr√®s ! C‚Äôest tout de m√™me tr√®s tr√®s confortable d‚Äôavoir l‚Äôh√©bergement au pied de la conf√©rence.&lt;/p&gt;&lt;h3 id="d√©barquement-√†-la-cit√©-des-congr√®s"&gt;D√©barquement √† la cit√© des congr√®s&lt;/h3&gt;&lt;p&gt;&lt;del&gt;Cl√©&lt;/del&gt; carte de la chambre r√©cup√©r√©e, bagages d√©pos√©s, il est l‚Äôheure d‚Äôaller chercher son badge. En effet, il est possible de r√©cup√©rer celui-ci d√®s la veille. Id√©e que je tiens √† qualifier d‚Äôexcellente, un grand bravo aux organisateurs. De quoi √©viter les queues √† rallonger √† l‚Äôouverture des portes et le stress qui va avec ! C‚Äôest aussi l‚Äôoccasion de d√©couvrir sereinement les lieux et leur organisation. M√™me si c‚Äôest encore le chantier (tout le monde s‚Äôaffaire au montage des stands, la r√©gie, les affichages‚Ä¶), c‚Äôest toujours plus agr√©able et serein que la cohue des deux jours √† venir.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/oBK-Ay_tilWSnpQLMSowmNXEF9EjY4eWLfiPTgsHIc3OumsFwEezdoQg_vOXNaCwih5EJ-_XqA3RI-WmqT1_HG3t_tvUULeAltKZZ5ohALJ50lu38zJR-0Oyd8ID2iLVZjoDre5ao4cj9yXDB8AAVDWJonWMnTUbRb5_ZeFYRDQoN7ACicC5zg5JgSg3Ww1igR1RWaQceR9GMKfMG-PxvfVbWx-kE3U_TnN33kO2bFvduihQOYWtaDdhMqnfNHg7Qsf5mbOrIjppucF-I8zEcCAfHhXhmWTtHEyGs3A95KXPn-Y-BstKWlguMSryA5jxoPrnV-KutkyDm17q8HaV1tgMjdVarN2ZDg9ARDduwgbD4UdaE2MUvEky1bMtOYxpIF-adDkceGqn699l3scyshOU4GSKOzpOFEWGYm1AS6fvF1CjcLWnpd-JCWE4onx6HuQA01LapnZNFEY2XBPa4mOuPd-qNs01uB2soc-p4-TMxocGQytPWC6cFeW7RqFElI1heoZt2Kouti4hF7USef03EX1L5Zd2XkEx_ncugFeSKEoLDj7ZJcAAYP45Q3DPF8hyzx75jEs_iUSooyvlvADKluBzAx3zKT37E-mkfJLLYu913rvhvg5B7CbgJ_tebsCQi2uSaAuXO9U89WYo6v19=w584-h850-no" alt="Badge DevFest Nantes" width="292px" height="425px" /&gt;&lt;/p&gt;&lt;p&gt;L‚Äôemplacement de la cit√© des congr√®s est vraiment id√©ale, proche de la gare, du tram, de grandes lignes de bus ; ainsi que de tr√®s nombreux bars et restaurant.&lt;/p&gt;&lt;h3 id="premi√®re-sortie"&gt;Premi√®re sortie&lt;/h3&gt;&lt;p&gt;C‚Äôest donc en d√©but de soir√©e qu‚Äôa √©t√© donn√© le rendez-vous pour le d√Æner des speakers. Un bus sp√©cialement affr√©t√© nous attend, difficile √† louper avec ces d√©corations aux couleurs de ce DevFest Nantes 2018.&lt;/p&gt;&lt;p&gt;L‚Äôarriv√©e s‚Äôeffectue devant &lt;a href="https://www.lesmachines-nantes.fr/"&gt;les Machines de l‚Äô√Æle&lt;/a&gt; malheureusement ferm√©e mais dont on peut tout de m√™me acc√©der √† l‚Äô√©norme √©l√©phant.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/7KjEe09Q5orqblRGzwvfMMpZHjpdAWwUqE-Rjj0vmWUqeikOPe-L5KQ0zmjKT7V8GTYlfabD7JJND9H-ZLZvv1Dot7T51Heysmn5LvgXmOWBdOAOAaL7x1Ooz4-AUUI5ubcC5pbEIPuPFGUu9ZXvoUQj_dL3hCiXJ5Evi4Tb_jg0jrC-ZaSW-6saY5kICOX3lbJa6oHUoUGbrgHu5Xx9Gefc3rTaK0UVHUj8oI8VkQvPlbsrxTB2pNgOHLi0FHELhd7ncziOwuK36pIFdtt3VluEKcBzXjXIr0bB5DaAbjfb0BljB8XegzitNvqMuBgXbMTkp_RpE9BkiHrREoxqFFt4wAt1zLdjizsbfegg2Q0bOlId2YzP5AYfM3mU21EdzX8c7dHNWag47kAWeA16qU_xVuFG9fMaiax0VFfXmEPngGh0D6lNEbo6VfVWE1kp3i1WaLIoP0iX-sAEnMFG85p3EIXF_pSA89jG0Wpsqvaoj4NufQ9fkBvYgKCtbAEWKk51M5H-kSGrUHZ5yAQz9MlcVp3-Wg-6ep_y5mw9UQ62VDiw5iF7Ffv9laAsxsNxkmklRYtIKyQW9IKF7bWhd01pRWWFXJMAq_lFhWTFh4nrMsKRbJ-MkB6aXNaUR_pN0fPiQJ8TNt28U7OsG7_bUSIUu6FKPMIipK26iVcAJDwJam2I030i_B12iglrfCHogCWy-YvxOI6Q7f9Rl9c=w741-h987-no" alt="Les Machines de l'√Æle - Nantes" width="371px" height="494px" /&gt;&lt;/p&gt;&lt;p&gt;Puis, direction &lt;a href="https://www.levrettecafe.fr/"&gt;le Levrette Caf√©&lt;/a&gt; (un nom pareil ne s‚Äôinvente pas) o√π se d√©roule les festivit√©s. Bi√®re, mais aussi cidre, sont servis √† volont√© directement au bar. Je salue d‚Äôailleurs l‚Äôinitiative de proposer autre chose que de la bi√®re ! Bien entendu du soft est √©galement disponible en libre service. C√¥t√© repas, ce sont des plateaux de charcuterie, du fromage et bien s√ªr du pain qui nous sont servis.&lt;/p&gt;&lt;p&gt;Une tr√®s bonne ambiance qui m‚Äôa permis de faire connaissance avec quelques speakers et de d√©couvrir un peu le parcours de chacun. Un seul regret, l‚Äôespace sous plafond un peu r√©duit qui rend l‚Äôint√©rieur parfois insupportable la chaleur et le bruit. La fra√Æcheur (et la bruine) n‚Äôaura pas emp√™ch√© certains de pr√©f√©rer la terrasse en ext√©rieur donnant directement au dessus de la Loire ainsi qu‚Äô&lt;a href="https://www.maillebreze.com/fr"&gt;un navire militaire&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/ZVD4Js9STqMqN9NwZuQtr-pgfhQTx2060xD4oMUJzfIqZXqynTOfBufTSnrYWFhypLahIg0rxf7dbY-PeHN3jBiC-z9uDCnCLMY5hqaV2bKpL2blTomPmkAxvcpInGIkcgyBMybUNmxgumkYALABIJ3OIIWMaiPLzsKtG-LdItynPI8buUzTQAJ1b1fudlb-7rmj9MN4q9uxuuJR51fsfTxrY3wX-pGr5MuL6fgVvKjdDB8MCerp4PfDaKkwVPFQiVtntWG2Mrngcku4Psbf8LyPhORt_4PLGd2LZ04vf_SY8yQCSRU4WrPSxmnkOHnEUQ2QSO_PO5ETOREKoMPjYJknvQklvT4NUA7AI7QZUayqFA6gC-bSxsXp0q1hoKLz1tt1ZigaLwPUOl29sLyBXB-vVpyad9uCrE5Dj1zOIse-afUs5ZoGtC_0uuapQenJqhmyOaBy9JPjuG5QHqhsiv1cR-NE_r2Mg-rz3w09JvPofZpEUSjcjMNOxSJxKqQ6KuzY9WEcnp-Xw2QzwtSFxoLeNJziCroGI5IHmr8eI6kTv_rH6DPm68Zs5MW4ACCLAQKWcU9XYh9Xh_8eK69Ld0dTdkQkHZnLmFpOK6M2gn4dgW39SSWU25FcqEKINmedvl5dJFXtdfpOeQpObevQBHJ0Lvk4wJzqX4JHHJeQWXT7-ejt6FKV6WNymDRU_ARFIBtcR0HJR9CsEnDLt1k=w1316-h987-no" alt="Le Maill√© Br√©z√©" /&gt;&lt;/p&gt;&lt;p&gt;Les nantais √©tant au top de l‚Äôaccueil, des &lt;em&gt;after&lt;/em&gt; sont propos√©es ; mais il est temps pour moi de rentrer via le m√™me bus qui nous avait d√©pos√©. Une fois de plus un truc bien pens√© par l‚Äôorganisation.&lt;/p&gt;&lt;h2 id="les-principales-op√©rations"&gt;Les principales op√©rations&lt;/h2&gt;&lt;h3 id="linfrastructure-as-code-avec-terraform-mathieu-herbert"&gt;L‚Äôinfrastructure as code avec Terraform (Mathieu HERBERT)&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day1?sessionId=140"&gt;Lien&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Tr√®s curieux au sujet de Terraform, je suis relativement impatient de voir cette pr√©sentation. Je n‚Äôai pas eu l‚Äôoccasion de mettre en pratique n‚Äôest suivi que le &lt;em&gt;get started&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Mathieu HERBERT revient sur les fondements de Terraform et son fonctionnement. Il distribue √©galement quelques conseils et bonnes pratiques qui manquent √† la documentation de d√©marrage sur Terraform.&lt;/p&gt;&lt;p&gt;Si vous n‚Äôavez pas (ou peu) de connaissance de Terraform, je vous conseille vivement cette pr√©sentation qui introduit tr√®s bien cette technologie.&lt;/p&gt;&lt;h3 id="au-pays-des-gophers-√†-partir-de-3-ans-nicolas-lepage"&gt;Au pays des Gophers (√† partir de 3 ans) (Nicolas LEPAGE)&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day1?sessionId=156"&gt;Lien&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comment qualifier cette pr√©sentation ? Je dirais un OVNI (pour rester dans le th√®me de l‚Äô√©dition). L‚Äôid√©e est de pr√©senter les Goroutines √† travers une histoire au style enfantin.&lt;/p&gt;&lt;p&gt;Tr√®s accessible et super fun, cette pr√©sentation est agr√©able et on y apprend pas mal de choses sur Go.&lt;/p&gt;&lt;h3 id="penser-son-infrastructure-comme-du-code-bastien-cadiot"&gt;Penser son infrastructure comme du code (Bastien CADIOT)&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day2?sessionId=159"&gt;Lien&lt;/a&gt;&lt;/p&gt;&lt;p&gt;J‚Äôavais d√©j√† vu Bastien CADIOT lors de Devoxx France 2018, il co-pr√©sentait &lt;a href="https://www.youtube.com/watch?v=nMxYsDywS6s"&gt;une universit√© sur la galaxie Hashicorp&lt;/a&gt; (que je vous recommande). Et cette session confirme qu‚Äôil s‚Äôagit d‚Äôun tr√®s bon &lt;em&gt;speaker&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Bastien CADIOT vient nous pr√©senter l‚Äô&lt;em&gt;Infrastructure as Code&lt;/em&gt;, avec bien s√ªr des exemples bas√©s sur Terraform. Sans oublier tout plein de rappel pour se rappeler que les probl√©matiques ne sont pas que techniques mais qu‚Äôil y a √©galement des changements de paradigme. Une mention sp√©ciale pour la r√©f√©rence √† un site que toute personne √©voluant dans l‚Äôunivers &lt;em&gt;DevOps&lt;/em&gt; doit conna√Ætre : https://web.devopstopologies.com/ (Merci &lt;a href="https://twitter.com/BetetaMichel"&gt;Michel&lt;/a&gt; !)&lt;/p&gt;&lt;h3 id="istio-we-have-a-problem-understanding-and-fixing-bugs-with-a-service-mesh-david-gageot"&gt;Istio, we have a problem! Understanding and fixing bugs with a service-mesh (David GAGEOT)&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day2?sessionId=119"&gt;Lien&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Est-il n√©cessaire de pr√©senter David GAGEOT ? &lt;em&gt;Speaker&lt;/em&gt; notoire depuis de nombreuses ann√©es et comme l‚Äôa introduit &lt;a href="https://en.wikipedia.org/wiki/Master_of_ceremonies#Corporate"&gt;le &lt;em&gt;Master of Ceremonies&lt;/em&gt;&lt;/a&gt;, c‚Äôest un peu notre idole.&lt;/p&gt;&lt;p&gt;Comme l‚Äôindique le titre, la pr√©sentation se penche sur l‚Äôoutil Istio (service mesh pour Kubernetes) et sa panoplie de fonctionnalit√© autour de l‚Äôobservabilit√© afin de traquer les bugs et aussi quelques conseils pour faire du &lt;em&gt;Canary release&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Il y a pas mal de choses fournies nativement, de quoi bien comprendre tout ce qui passe en production √† la seule et unique condition de bien faire transiter quelques headers √† travers la couche des micro-services.&lt;/p&gt;&lt;h3 id="r√©mun√©ration-poker-david-bouch√©"&gt;R√©mun√©ration Poker (David BOUCH√â)&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day2?sessionId=143"&gt;Lien&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Avant tout c‚Äôest une rencontre avec une personne. En effet, j‚Äôai eu l‚Äôoccasion √† plusieurs reprises de discuter avec David sur ces deux jours. Si vous avez l‚Äôopportunit√© de le rencontrer, n‚Äôh√©siter pas √† √©changer avec lui.&lt;/p&gt;&lt;p&gt;David BOUCH√â, dirigeant et fondateur d‚ÄôOniti, nous pr√©sente le parcours de son entreprise ; et plus particuli√®rement du salaire et des augmentations. Puis il explique le mode de d√©cision de la r√©mun√©ration originale qu‚Äôils ont mis en place dans sa propre entreprise.&lt;/p&gt;&lt;h2 id="les-temps-libres"&gt;Les temps libres&lt;/h2&gt;&lt;h3 id="opening-keynote"&gt;Opening keynote&lt;/h3&gt;&lt;p&gt;&lt;a href="https://devfest.gdgnantes.com/schedule/day1?sessionId=102"&gt;&lt;em&gt;Watch this space&lt;/em&gt; (Chris HEILMANN)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;L‚Äôinterlude qui pr√©c√®de le premier &lt;em&gt;talk&lt;/em&gt; d‚Äôouverture est toujours l‚Äôoccasion de faire le &lt;em&gt;show&lt;/em&gt;. Et les nantais sont plut√¥t dou√©s √† ce jeu-l√† ! Apr√®s une petite vid√©o bien sympathique, Jean-Fran√ßois GARREAU, habill√© en spationaute, vient nous faire un magnifique planter de drapeau. Je vous invite vraiment √† regarder les vid√©os d√®s qu‚Äôelles seront disponibles !&lt;/p&gt;&lt;p&gt;Apr√®s quelques mots de l‚Äôorganisation, c‚Äôest Chris HEILMANN qui prend les rennes (enfin le micro) pour nous parler, en anglais, de ce qui fait de nous des d√©veloppeurs : des pi√®ges et absurdit√©s de notre m√©tier (ou passion). Une belle mise en garde avec une approche plut√¥t positive sur comment am√©liorer les choses et surtout que nous exer√ßons un beau m√©tier.&lt;/p&gt;&lt;h3 id="ravitaillement"&gt;Ravitaillement&lt;/h3&gt;&lt;p&gt;&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/gdgnantes/31740621268/in/album-72157702575476534/" title="D√©jeuner"&gt;&lt;img src="https://farm2.staticflickr.com/1945/31740621268_6db81a911c_z.jpg" width="640" height="255" alt="D√©jeuner" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Encore une mention sp√©ciale pour l‚Äôorganisation qui a pr√©vu un espace &lt;em&gt;VIP&lt;/em&gt; afin que les speakers puissent se restaurer sereinement et rapidement. De quoi √©viter d‚Äôavoir le stress de trouver quelque chose (et le temps) pour manger.&lt;/p&gt;&lt;p&gt;Au niveau du choix de la nourriture, il y a ce qu‚Äôil faut : des bouch√©es chaudes/froides, des verrines chaudes/froides, des ‚Äúplats‚Äù v√©g√©tariens, ‚Ä¶ Idem pour la boisson mais uniquement du soft. Cependant de nombreux sponsors proposent de la bi√®re ou du cidre.&lt;/p&gt;&lt;p&gt;Une fois le ventre rempli et quelques discussions plus tard, il reste encore du temps pour faire le tour des stands. La plupart des sponsors sont bienveillants, ils essaient de comprendre ce qu‚Äôon vient pr√©senter et jouent le jeu des personnes qui viennent voir ce qu‚Äôils ont √† proposer (goodies, concours, sucreries, ‚Ä¶) sur leurs stands. EN REVANCHE, certains n‚Äôont pas du tout jou√© le jeu et ont m√™me organis√©s des tirages au sort (avec pr√©sence obligatoire) durant les conf√©rences ‚Ä¶ Sans parler d‚Äôun ton qui n‚Äôest pas des plus agr√©ables.&lt;/p&gt;&lt;p&gt;Heureusement, la bonne ambiance r√®gne globalement et il est temps de reprendre les conf√©rences !&lt;/p&gt;&lt;h3 id="after-party"&gt;After Party&lt;/h3&gt;&lt;p&gt;&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/gdgnantes/44699052345/in/album-72157702575476534/" title="After Party"&gt;&lt;img src="https://farm2.staticflickr.com/1951/44699052345_35ce69a90a_z.jpg" width="640" height="306" alt="After Party" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Soyons honn√™te, ce n‚Äô√©tait pas une r√©ussite. L‚Äôorganisation a √©t√© d√©l√©gu√© a deux sponsors qui probablement n‚Äôavait pas l‚Äôexp√©rience de ce genre d‚Äô√©v√©nements. Une seule tireuse √† bi√®re pour tout le monde a cr√©√© un √©norme bouchon dans l‚Äôespace r√©serv√©. S‚Äôil y avait bien quelques &lt;em&gt;soft&lt;/em&gt;, pas d‚Äôalternatives √† la bi√®re, comme du cidre, n‚Äôa √©t√© propos√©.&lt;/p&gt;&lt;p&gt;Situ√© au premier √©tape de la cit√© des congr√®s, la pi√®ce √©tait trop exigu√´ et n‚Äôaurait pas pu accueillir les 1 800 participants de ce DevFest. Trop chaud, trop de bruit, c‚Äô√©tait insupportable. D‚Äôailleurs plusieurs personnes n‚Äôont pas h√©sit√© √† investir le hall (bien plus a√©r√©). La musique trop forte sur fond de th√®me de r√©tro n‚Äôa rien arrang√©.&lt;/p&gt;&lt;p&gt;La nourriture s‚Äôest pas mal fait attendre. D‚Äôailleurs, beaucoup de personnes se sont demand√©es s‚Äôil y en avait de pr√©vu. D√®s son arriv√©e, elle a donc √©t√© naturellement prise d‚Äôassaut et difficile ne serait-ce que d‚Äôen r√©cup√©rer une miette. Heureusement, l‚Äôheure avan√ßant les lieux se sont peu √† peu vid√©s, laissant un acc√®s plus lib√©r√© aux boissons et √† la nourriture.&lt;/p&gt;&lt;p&gt;Finalement, apr√®s cette soir√©e, avec les organisateurs et deux autres non-Nantais, on s‚Äôest retrouv√© dans un bar pour c√©l√©brer la fin de cette magnifique premi√®re journ√©e de DevFest !&lt;/p&gt;&lt;h3 id="ending-keynote"&gt;Ending keynote&lt;/h3&gt;&lt;p&gt;&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/gdgnantes/45562199252/in/album-72157702575476534/" title="Burger Quizz by DevFest Nantes"&gt;&lt;img src="https://farm2.staticflickr.com/1902/45562199252_88854cbc13_z.jpg" width="640" height="427" alt="Burger Quizz by DevFest Nantes" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comment qualifier ce moment ? Magistral, enthousiasmant, d√©contractant ? Tout √ßa √† la fois (et pas seulement !). Un remake du burger quizz, pr√©sent√© par &lt;a href="https://twitter.com/jefBinomed"&gt;Jean-Fran√ßois GARREAU&lt;/a&gt; avec dans l‚Äô√©quipe Mayo : &lt;a href="https://twitter.com/estelandry"&gt;Estelle LANDRY&lt;/a&gt; et &lt;a href="https://twitter.com/LostInBrittany"&gt;Horacio GONZALEZ&lt;/a&gt; ; et dans l‚Äô√©quipe Ketchup : &lt;a href="https://twitter.com/manongruaz"&gt; Manon GRUAZ&lt;/a&gt; et &lt;a href="https://twitter.com/scharrier"&gt;S√©bastien CHARRIER&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tr√®s fun et d√©complex√©, cette ultime session a permis √† tout le monde de ramener de la bonne humeur dans ses bagages. On retiendra √©galement l‚Äôannonce :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;du prochain &lt;a href="https://devfest.gdgparis.com/"&gt;DevFest Paris&lt;/a&gt; qui aura lieu le 8 f√©vrier 2019,&lt;/li&gt; &lt;li&gt;ainsi que le prochain &lt;a href="https://sunny-tech.io/"&gt;Sunny Tech&lt;/a&gt; qui aura lieu √† Montpellier les 27 et 28 juin 2019,&lt;/li&gt; &lt;li&gt;et enfin, la cr√©ation du &lt;a href="https://twitter.com/devfestbdm"&gt;DevFest du bout du monde&lt;/a&gt; qui aura lieu √† Brest le 22 f√©vrier 2019.&lt;/li&gt; &lt;/ul&gt;&lt;h2 id="retour-sur-terre"&gt;Retour sur Terre&lt;/h2&gt;&lt;p&gt;Cette √©dition du DevFest Nantes fut r√©ellement spectaculaire avec de belles rencontres et de magnifiques pr√©sentations. Une vrai r√©ussite sans quasiment aucun couac. Un grand bravo √† toute l‚Äô√©quipe organisatrice et les b√©n√©voles.&lt;/p&gt;&lt;p&gt;Je vous invite √† regarder d√®s maintenant la playlist &lt;a href="https://www.youtube.com/watch?v=uYQJzJSSPlA&amp;amp;list=PLuZ_sYdawLiXyaSnyRinPKvPXQIsNaJFz"&gt;DevFest Nantes 2018&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Si vous me croisez lors d‚Äôune conf√©rence, n‚Äôh√©sitez pas √† venir discuter ce sera toujours avec grand plaisir !&lt;/p&gt;&lt;p&gt;Pour finir, un grand merci :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;aux organisateurs de m‚Äôavoir s√©lectionn√©,&lt;/li&gt; &lt;li&gt;√† MonkeyPatch de m‚Äôavoir permis d‚Äôy aller,&lt;/li&gt; &lt;li&gt;et √† ma famille de m‚Äôavoir laiss√© partir.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/gdgnantes/45562224702/in/album-72157702575476534/" title="Happy End"&gt;&lt;img src="https://farm2.staticflickr.com/1948/45562224702_cd405d1e14_z.jpg" width="640" height="308" alt="Happy End" /&gt;&lt;/a&gt;&lt;/p&gt;</content> <author> <name>Logan Mauzaize</name> <email>logan@monkeypatch.io</email> </author> <category term="conf"/> <category term="devfest"/> <category term="nantes"/> <summary>En mati√®re de conf√©rence, je n‚Äôen ai encore que trois conf√©rences au compteur : DevFest Toulouse 2017, Devoxx France 2018, et enfin DevFest Nantes 2018. Trois conf√©rences, trois villes et trois dimensions. Autant dire que j‚Äô√©tais tout √† la fois excit√© et stress√© de croquer le biscuit nantais !</summary> <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://pbs.twimg.com/card_img/1052182719885664256/PHMhJ05N?format=jpg&name=600x314"/> </entry> <entry xml:lang="en"><title>ClojuTRE &amp;amp; SmallFP 2018 ‚Äî Review</title><link href="http://www.monkeypatch.io/en/2018/09/25/ClojuTRE-helsinki-2018.html" rel="alternate" type="text/html" title="ClojuTRE &amp; SmallFP 2018 ‚Äî Review"/> <published>2018-09-25T00:00:00+00:00</published> <updated>2018-09-25T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/09/25/ClojuTRE-helsinki-2018</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/09/25/ClojuTRE-helsinki-2018.html">&lt;p&gt;&lt;a href="https://clojutre.com"&gt;ClojuTRE&lt;/a&gt; is a Clojure conference happening in Finland since 2012.&lt;/p&gt;&lt;p&gt;I was super eager to attend a Clojure conference this year, so the addition of SmallFP just before ClojuTRE finally amortized the travel cost. &lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://i-rant.arnaudbos.com/img/clojutre-finland-2018-review/boats.jpg" alt="Helsinki" /&gt;&lt;/p&gt;&lt;hr /&gt;&lt;h1 id="tldr"&gt;tl;dr&lt;/h1&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;SmallFP did deliver a great experience by allowing an audience of Clojure developers to hear about other functional programming languages and concepts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The topics were a nice mixture of industry practices, libraries and research.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The venue was &lt;strong&gt;a Tram museum&lt;/strong&gt;(!)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;I bought bear salami in Helsinki‚Äôs Old Market Hall‚Ä¶ &lt;strong&gt;BEAR SALAMI!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;hr /&gt;&lt;h1 id="preamble"&gt;Preamble&lt;/h1&gt;&lt;p&gt;This year I was super eager to attend a Clojure conference and was looking forward to EuroClojure. But after the realization that it would not hapen, I switched my focus to ClojuTRE as it was one of the most popular one in Europe.&lt;/p&gt;&lt;p&gt;For the second time, ClojuTRE has been colocated with SmallFP, also a one day conference, focusing on other functional programming languages.&lt;/p&gt;&lt;p&gt;The addition of SmallFP is a very good initiative, it amortizes the cost of travelling and it also encourages cross-polinization and open-minded/honest discussions in the functional programming community.&lt;/p&gt;&lt;p&gt;&lt;img src="http://i-rant.arnaudbos.com/img/clojutre-finland-2018-review/cathedral.jpg" alt="Helsinki Cathedral" /&gt;&lt;/p&gt;&lt;h1 id="smallfp"&gt;SmallFP&lt;/h1&gt;&lt;h2 id="ocaml-reborn-fullstack-applications-with-reasonml-ant√≥nio-monteiro"&gt;OCaml, REborn: fullstack applications with ReasonML (Ant√≥nio Monteiro)&lt;/h2&gt;&lt;p&gt;&lt;a href="@anmonteiro90"&gt;Ant√≥nio Monteiro&lt;/a&gt; has been a ClojureScript developer, speaker and contributor for a few years, and although doing Clojure all day for work, he recently switched focus onto ReasonML on his spare time, and he explains why in this talk.&lt;/p&gt;&lt;p&gt;Coming from ClojureScript, it‚Äôs not a surprise that Ant√≥nio values data-driven applications, and ReasonML seems to suits well this kind of applications too.&lt;br /&gt; ReasonML is a modern new dialect of OCaml aimed at JavaScript developers and provides a toolchain for fullstack applications.&lt;/p&gt;&lt;p&gt;It provides a statically checked type system which enables developers to share objects between backend and frontend and catch errors at compile time.&lt;br /&gt; Unlike some statically typed programming languages, like Haskell for instance, ReasonML is not a pure language, as the type system will not check and prevent the developer to do side effects, among other things.&lt;br /&gt; As Ant√≥nio puts it, the type system is still 100% sound, but more ‚Äúpractical‚Äù.&lt;/p&gt;&lt;p&gt;Its type system seems to align well with GraphQL types and schemas, and provides type-checked queries ensuring consistency between the client and server implementation, when their code is co-located. I‚Äôm wondering what the story is when they are not though‚Ä¶&lt;/p&gt;&lt;p&gt;At MonkeyPatch, we‚Äôve recently interviewed a candidate who implemented his coding test at home in ReasonML (&amp;amp; Reason React).&lt;/p&gt;&lt;p&gt;Having a candidate handing us this nice piece of frontend code brightened up my day. I look forward to see the future of ReasonML.&lt;/p&gt;&lt;p&gt;&lt;a href="https://clojutre.org/2018/#anmonteiro"&gt;Abstract, slides and video available here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="interactive-functional-gpu-accelerated-programming-in-clojure-dragan-djuric"&gt;Interactive, Functional, GPU Accelerated Programming in Clojure (Dragan Djuric)&lt;/h2&gt;&lt;p&gt;The recent surge of machine learning, deep learning, AI and whatnot has made the ecosystem of libraries and tools to ‚Äúdo data science‚Äù to grow quickly.&lt;/p&gt;&lt;p&gt;In the quest of performance, data scientists value every processing unit cycle and typically use low-level programming languages such as C or C++ rather than high-level ones. But even then, the performances are dramatically better when leveraging the power of GPU grids with special versions of these languages.&lt;/p&gt;&lt;p&gt;On the other hand, programmers typically counterbalance the rigidity, low-level aspects and scaling issues of these languages by using high-level programming languages such as R, Python or Java as wrappers.&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/draganrocks"&gt;Dragan Djuric&lt;/a&gt; is know in the Clojure community for his work on libraries allowing developers to leverage the power of GPU kernels, from the comfort of the Clojure REPL.&lt;/p&gt;&lt;p&gt;The numbers showed in his slides comparing runtime speed for basic ‚Äúnumber crunching‚Äù tasks are telling, and he presents a style of programming which is functional and interactive as another approach to notebook based programming, which seems to be problematic:&lt;/p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;slides for my &amp;quot;I Don&amp;#39;t Like Notebooks&amp;quot; &lt;a href="https://twitter.com/hashtag/JupyterCon?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#JupyterCon&lt;/a&gt; talk:&lt;a href="https://t.co/30peBFwTbv"&gt;https://t.co/30peBFwTbv&lt;/a&gt;&lt;/p&gt;&amp;mdash; Joel Grus (@joelgrus) &lt;a href="https://twitter.com/joelgrus/status/1033035196428378113?ref_src=twsrc%5Etfw"&gt;August 24, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;p&gt;I have to admit I‚Äôm far (oh so far) from being an expert in this field (I‚Äôve just tried some basic introductory exercises a few times), but this presentation really resonated with me, and a lot of the pain points outlined in this talk by Joel Grus could, perhaps disappear with the use of a proper REPL.&lt;/p&gt;&lt;p&gt;I think Clojure‚Äôs style for interactive development can provide a good story for agile and iterative data science projects.&lt;/p&gt;&lt;p&gt;&lt;a href="https://clojutre.org/2018/#dragandjuric"&gt;Abstract and video available here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="i-used-elm-in-production-and-it-cost-me-my-job-annaia-berry"&gt;I used Elm in production and it cost me my job (Annaia Berry)&lt;/h2&gt;&lt;p&gt;&lt;a href="https://twitter.com/ann_arcana"&gt;Annaia Berry&lt;/a&gt; delivered an accurate, yet oh so funny talk on how Elm has provided her and her team with a really productive and stable environment. New feature development was so quick, and maintenance tasks so infrequent, that it wasn‚Äôt necessary for the company hiring her as a consultant to keep her.&lt;/p&gt;&lt;p&gt;This is a story about how functional programming is a comptetitive advantage but also a double edged sword for programmers, who need to live and pay the bills in this world where productivity is not necessarily accurately measured nor valued.&lt;/p&gt;&lt;p&gt;And then the talks takes an unexpected turn &lt;a href="https://www.youtube.com/watch?v=LEZv-kQUSi4"&gt;to narcissistic design&lt;/a&gt;. Describing all the things we can still do to keep our jobs by complecting some aspects of our work so much as to be the only ones able to maintain it.&lt;/p&gt;&lt;p&gt;It was a very entertaining talk, I encourage you to &lt;a href="https://clojutre.org/2018/#jarcane"&gt;watch it here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="meetings-with-remarkable-trees-bodil-stokke"&gt;Meetings With Remarkable Trees (Bodil Stokke)&lt;/h2&gt;&lt;p&gt;As a good clojurist, I‚Äôm pretty familiar with Bagwell Tries (aka ‚ÄúHash array mapped tries‚Äù) and Hickey Tries (aka ‚ÄúPersistent Bit-partitioned Vector Tries‚Äù or ‚ÄúBitmapped Vector Tries‚Äù) but I‚Äôm less familiar with Finger Trees.&lt;/p&gt;&lt;p&gt;If you don‚Äôt know what those data structures are or what they provide then good news, &lt;a href="https://twitter.com/bodil"&gt;Bodil Stokke&lt;/a&gt; just gave a quick reminder of their Big O properties and quickly presented the one data structure to rule them all: RRB-Trees (aka Relaxed Radix Balanced Trees).&lt;/p&gt;&lt;p&gt;In this presentation, Hickey Tries are explored at length and reimplemented in JavaScript. Sadly, Finger Trees are not studied as much and are just presented for Big O comparison. Finally, RRB-Trees are introduced in the end to outline their awesome properties.&lt;/p&gt;&lt;p&gt;In summary: review your Big O, study awesome data structures and worship Phil Bagwell.&lt;/p&gt;&lt;p&gt;&lt;a href="https://clojutre.org/2018/#bodil"&gt;Abstract, slides and video available here&lt;/a&gt;.&lt;/p&gt;&lt;h1 id="clojutre"&gt;ClojuTRE&lt;/h1&gt;&lt;h2 id="documenting-the-clojurescript-ecosystem-martin-klepsch"&gt;Documenting the Clojure/Script Ecosystem (Martin Klepsch)&lt;/h2&gt;&lt;p&gt;If it wasn‚Äôt clear already I‚Äôm a huge fan of Clojure, and as a user for more than five years, I‚Äôm pretty familiar with the language and its ecosystem.&lt;br /&gt; But regularly, through polls or random blog posts on the Web, we hear about beginners having a hard time getting started setting up their environment, choose libraries, understand how to use libraries or simply grok the docstring of some core functions.&lt;/p&gt;&lt;p&gt;To be honest it was my first impression too, although I remember being amazed by reading the core functions docstrings. They &lt;strong&gt;seem&lt;/strong&gt; difficult to grasp sometimes, yes, but they are concise and accurate.&lt;/p&gt;&lt;p&gt;After this barrier to entry, the Clojure programmers tend to quickly skim through the documentation of a library, and if the documentation is not clear enough, jump straight into the code, see what data goes in and what goes out, fire a REPL to start experimenting.&lt;/p&gt;&lt;p&gt;However from a beginner‚Äôs point of view it is a bit rude, and we could all benefit from better documentation.&lt;/p&gt;&lt;p&gt;Rust has &lt;a href="docs.rs"&gt;docs.rs&lt;/a&gt;, and now, Clojure has &lt;a href="https://cljdoc.xyz/"&gt;cljdoc!&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Cljdoc is an initiative by &lt;a href="https://twitter.com/martinklepsch"&gt;Martin Klepsch&lt;/a&gt; to encourage library authors to write better documentation without the hassle of building it.&lt;/p&gt;&lt;p&gt;The project is young but very promising, and the roadmap includes interesting features such as attaching code examples to vars or integrating &lt;code class="highlighter-rouge"&gt;clojure.spec&lt;/code&gt; to navigate from function to function inside or accross library boundaries.&lt;/p&gt;&lt;p&gt;There is no video available for this talk as Martin has asked the conference organizers to defer its release for after he‚Äôs back from a sailing trip, so he can answer questions.&lt;/p&gt;&lt;p&gt;You can still &lt;a href="https://clojutre.org/2018/#martinklepsch"&gt;read the abstract here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="carp-a-language-for-the-21st-century-veit-heller"&gt;Carp: A Language for the 21st Century (Veit Heller)&lt;/h2&gt;&lt;p&gt;In a tweet:&lt;/p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Carp, a type-inferred (like Haskell), borrow-checked (like Rust) Lisp-1 (like Clojure): &lt;a href="https://t.co/LkekbtvXa3"&gt;https://t.co/LkekbtvXa3&lt;/a&gt;&lt;/p&gt;&amp;mdash; (Œª. borkdude) (@borkdude) &lt;a href="https://twitter.com/borkdude/status/1043582174014902274?ref_src=twsrc%5Etfw"&gt;September 22, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;p&gt;Pretty exciting right?&lt;/p&gt;&lt;p&gt;Veit Heller gave us a gentle introduction to the language he is a core contributor to. Carp is designed for realtime applications: games and graphical libraries.&lt;/p&gt;&lt;p&gt;It is not ready for production yet, but it will be interesting to see how it evolves and how fast brave people will adopt it.&lt;/p&gt;&lt;p&gt;You can find &lt;a href="https://clojutre.org/2018/#hellerve"&gt;the abstract here&lt;/a&gt; and the video by following the link in the tweet above.&lt;/p&gt;&lt;h2 id="native-clojure-with-graalvm-jan-stƒôpie≈Ñ"&gt;Native Clojure with GraalVM (Jan Stƒôpie≈Ñ)&lt;/h2&gt;&lt;p&gt;It is impossible to not hear about GraalVM these days, and the Clojure community seems to also be interested in it.&lt;/p&gt;&lt;p&gt;In this presentation &lt;a href="https://twitter.com/janstepien"&gt;Jan Stƒôpie≈Ñ&lt;/a&gt; shows interesting numbers comparing the binary sizes, startup times and memory usages of different packaging/runtime/targets.&lt;/p&gt;&lt;p&gt;He shows that thanks to GraalVM, Clojure can actually become a good candidate to command line utilities too, giving us the power of Clojure for data manipulation to transform incoming data and chain small utilities following the Unix philosophy.&lt;/p&gt;&lt;p&gt;He goes on demonstrating a simple key/value store implementation and its packaging as a native binary inside a Docker image resulting in a &lt;strong&gt;13MB&lt;/strong&gt; (!) image size.&lt;/p&gt;&lt;p&gt;&lt;a href="https://clojutre.org/2018/#janstepien"&gt;Abstract, slides and video available here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;On a side note, if you haven‚Äôt read this paper (below) by Oracle Labs people about Truffle, I encourage you to do so now!&lt;/p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Practical Partial Evaluation&lt;br /&gt;for High-Performance Dynamic Language Runtimes.&lt;br /&gt;&amp;quot;This separation of concerns reuses a language-agnostic optimizing compiler and only requires an implementation of language semantics as an interpreter in a managed host language&amp;quot;&lt;a href="https://t.co/owgOD5K0Gl"&gt;https://t.co/owgOD5K0Gl&lt;/a&gt;&lt;/p&gt;&amp;mdash; Arnaud Bos (@arnaud_bos) &lt;a href="https://twitter.com/arnaud_bos/status/994190039155388416?ref_src=twsrc%5Etfw"&gt;May 9, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;&lt;p&gt;Obviously I haven‚Äôt covered all of the talks in this review, I‚Äôve tried to stick with the ones that I knew I could summarize properly, but they are not necessarily the only ones I‚Äôve found interesting.&lt;br /&gt; If you are eager for more I encourage you to watch the other talks on youtube. The organizers have done an amazing work at publishing all the videos in under a week, and the 25 minutes long format is ideal for ‚Äúlater watching‚Äù.&lt;/p&gt;&lt;p&gt;Finally, I‚Äôd like to address a giant thank you to &lt;a href="http://www.monkeypatch.io/"&gt;MonkeyPatch&lt;/a&gt; (my employer) for allowing the budget to attend &lt;strong&gt;yet another conference&lt;/strong&gt;!&lt;/p&gt;</content> <author> <name>Arnaud bos</name> <email>arnaud@monkeypatch.io</email> </author> <category term="ClojuTRE"/> <category term="Clojure"/> <category term="conf"/> <category term="FunctionalProgramming"/> <summary>ClojuTRE is a Clojure conference happening in Finland since 2012.I was super eager to attend a Clojure conference this year, so the addition of SmallFP just before ClojuTRE finally amortized the travel cost.</summary> </entry> <entry xml:lang="fr"><title>Retour SunnyTech 2018</title><link href="http://www.monkeypatch.io/en/2018/07/13/SunnyTech.html" rel="alternate" type="text/html" title="Retour SunnyTech 2018"/> <published>2018-07-13T00:00:00+00:00</published> <updated>2018-07-13T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/07/13/SunnyTech</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/07/13/SunnyTech.html">&lt;p&gt;Les grosses chaleurs, le chant des cigales, la philo du Bac., les gr√®ves de la SNCF, et &lt;a href=""&gt;&lt;strong&gt;SunnyTech&lt;/strong&gt;&lt;/a&gt; : voil√† l‚Äô√©t√© ! Cette ann√©e, les communaut√©s Montpelli√©raines organisent la premi√®re √©dition de SunnyTech. Pour les toulousains c‚Äôest g√©nial d‚Äôavoir une conf√©rence aussi proche.&lt;/p&gt;&lt;p&gt;Voici une petite s√©lection de ce j‚Äôai trouv√© super dans la conf√©rence, mais forc√©ment avec quatres salles en parall√®les, ce n‚Äôest qu‚Äôun petit aper√ßu. &lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/GEJ_LQviDIPSLGrvKUebtQOQ6hputryLqbODSjQkuJCGW44-KlnKP_Sotli7Dz2vtw2sqWDpTaSOcLt8v_L0dIfPVQouz4PVjzQGhfwDRKQx8ikRfIWE_xXwjGYJraXG4S7bFSLu9EAermukxELZyC8TFO6vhtUK5s-YRwIsw14lAU6wlBLIv_mRi6iVoe8wHKSbPn_UCvAkgJ_105UJCJqHN9OL75vQgnLhurt39v6ehsaZLZhLTI58BXzBb2ZsqDqPWODEk0bO37_qqItQOxotHwRRUwXTtp3y9DBS0fQMVqdWRALNiIDpuDYYnDktogDjMH6mHMe9IhmLbGDR-X1hpbZutPKC0oPlPAkNQDb2Yk63EH5aIcVWCwJ9cqKdtvImooHK2FlPE0dY6rxqMia9V6wjRLK-l5avBN8J3TSjNMhKcZ2Kex7losuZga0ppW-ni2anzd3_cc_4SNSt5viVcsZ7yi4XrCs3k55ewzXV7pHW4Z-kChMVajjeghYxjk8s-Dd5XBzl1rRHiNNQioPq6y4T_ouqI-MWahrGhYSvCeWQxRYhf1TsCicYnGrCcvLJCFl6HaZ7jzL2AW0tRLmtpaiBBRpCYlbhER31dmrpOyrFXwd59nxjD2GlJ6FQ4NQ4ilo4uJ5ht0ZRujNcqob1SvDlwQSd=w586-h390-no" alt="Team" /&gt;&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="linterop√©rabilit√©-des-web-components-mythe-ou-r√©alit√©-"&gt;L‚Äôinterop√©rabilit√© des Web Components, mythe ou r√©alit√© ?&lt;/h2&gt;&lt;p&gt;Les &lt;a href="https://noti.st/lostinbrittany/xyJkQe/the-web-components-interoperability-challenge"&gt;slides&lt;/a&gt;, le d√©p√¥t (github)[https://github.com/LostInBrittany/web-components-interop].&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/l5vtYsb6Rxz8Phmz-HCdXJA1SiQSE97XEwsQvIBgiBXtfMyW7vxhC3eS-8VxoVP12mknxY62Q6pN-gipwexls7xzx2rpD0hxd3eu3-DHZxlCZy2i95_3IHLWt-Yr6_DuTGK4Ov6e4ZELVGlZPYN_87o3lt09UbB8UAJw7EopVI21VkT_Col1cXXj8PJlZUwdTMVhZa9ah5jVO2RmhXMlBN2kSuRJiTF4WWr0tvly4j_IovWKtu2NNkKHkOwCeVdV9QWnDHelJI2kknS5TWmfBTRFEWmj2bl-1Y_EjgFnmIVTVE5ojzk3xuZyOvzATZVZDARWvopLfvVkqmQ_ElMvipIjV2uqAyB67mvV0rYKYTOxpRelsWdzbrx-8g_W3mFZ1XO-bS8siI2DZI-boeLcLNvljdo0ycRPnn-OCp17t7Gn7dMPgGYoEezFDiOLC9GIC7tBoKz2DHO95mKuVmJaTGvRL_oEGBix4fZDVpwtHvC2tRJCRIYYc1zTRlEXTyMsjnpVVhPXGyPmRIfYYSD3Eud7rv5qp14DHv4XeZ-P-fLWc5H-o95bYHXt6x2nfAdsX3SJv2ZVZLIr4ho7qdD1KZLjYh_MybKvjsHTEyGctO8l-sKB8HFyQtaCiS-6Vw6aeROVIVzbJErBtOviYZ9ibEDXHtbbDrLI=w736-h1104-no" alt="Horacio Gonzalez" /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/LostInBrittany"&gt;Horacio Gonzalez&lt;/a&gt; nous fait un rappel sur les &lt;em&gt;Web Components&lt;/em&gt;, en parcourant les sp√©cifications de &lt;em&gt;Custom Elements&lt;/em&gt;, du &lt;em&gt;Shadow DOM&lt;/em&gt;, et des &lt;em&gt;HTML Templates&lt;/em&gt;. En montrant comment on √©crit des composants web natif (vanillia), Horcacio nous explique le principe de fonctionnement, mais aussi tout le &lt;em&gt;boilerplate&lt;/em&gt; n√©cessaire.&lt;/p&gt;&lt;p&gt;Ensuite il nous parle rapidement de &lt;a href="https://www.polymer-project.org/"&gt;Polymer&lt;/a&gt;, mais nous pr√©sente surtout les autres fa√ßons de faire des &lt;em&gt;Web Component&lt;/em&gt; avec &lt;a href="http://slimjs.com/"&gt;Slim.js&lt;/a&gt;, &lt;a href="https://bramjs.org/"&gt;Bram&lt;/a&gt;, &lt;a href="http://skatejs.netlify.com/"&gt;SkateJS&lt;/a&gt;, &lt;a href="https://stenciljs.com/"&gt;Stencil&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;La d√©mo est convaincante : l‚Äôint√©r√™t majeur des Web Components c‚Äôest leur interop√©rabilit√©. En effet, c‚Äôest la meilleur fa√ßon aujourd‚Äôhui pour int√©grer des composants cr√©√©s par des biblioth√®ques diff√©rentes. C‚Äôest d‚Äôautant plus vrais s‚Äôil on utilise des &lt;em&gt;frameworks&lt;/em&gt; de plus haut niveau comme &lt;a href="https://vuejs.org/"&gt;VueJS&lt;/a&gt; ou Angular (avec le projet encore exp√©rimentale &lt;a href="https://blog.ninja-squad.com/2018/05/29/angular-elements/"&gt;Angular Elements&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;#shamelessplug&lt;/code&gt;: le sujet du prochain MKTD concerne les Web Components: &lt;a href="https://www.meetup.com/fr-FR/MonkeyTechDays/events/251431123/"&gt;native vs Stencil&lt;/a&gt;&lt;/p&gt;&lt;h2 id="kotlin-parsec"&gt;Kotlin Parsec&lt;/h2&gt;&lt;p&gt;Les &lt;a href="https://github.com/d-plaindoux/parsec.kotlin"&gt;slides&lt;/a&gt;, le d√©p√¥t &lt;a href="https://github.com/d-plaindoux/parsec.kotlin"&gt;github&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/8PvvAEV64YI4AOPDNWOAKexZXDr0ezF0iM0UTwhoPNXho1f0I_8APwDCy-6N3dvSOV86nVYcXZ1shGFCvyeekkcj8DQWCG1nWz4q4ATnh85slu3KdkA4VP5YuMtCcn3Me0Wrudq2res5XFySSmBFIXUl5yFevMC0PrRyf1duInDIofm8fMfhc3n9WheMqX2MzSVd0eANWGxx7MfCF5iNvecvlrjW3QgNAMPf2nH8YWN7qjjSxaIcGvcDG_MPygtqw_BB2vi8q9najR-5MwLjewD13igBR8nzukhcWBARt5Fh7uSoW8vY1gWZ4WPgreEyHyjwnAtUdd6roHAHskXFqicZcGTPASjGnuQaEc0vErmUs5Pb92roI8xfveAONXs7NfQcR1IQlHldvYnZOaNTjuOW1QhL1dxBmVzG24NtPN87FJx-rx40CQDI-kUr1Gd-kzZQcmsrIznAGebiDfYMa8u-BNfArO4v09URRfTrtHG9QFJnskv6P46MWKevObe_HlQfv25xLltARf8MXWc5fvWe1FRG1HtMY3XgnhRMirhw2a0HL4f0hQ3VEhLJt_8UqxMtFl8f8VhXKW0Bk4LgAjjFnfWjZxbACX0Jn0IqlXg2gZltm_2pTB2FP7YLHZ7td0FsBlKvdyd3kdooULzBeJuePqiCSBWs=w477-h318-no" alt="Dider Plaindoux" /&gt;&lt;/p&gt;&lt;p&gt;Pour ceux qui ne connaissent pas encore &lt;a href="https://twitter.com/dplaindoux"&gt;Dider Plaindoux&lt;/a&gt;, c‚Äôest un speaker singulier. Pour faire simple, √† toutes ses pr√©sentations on apprend des tonnes de trucs, mais on sort aussi avec un petit mal au cr√¢ne.&lt;/p&gt;&lt;p&gt;A partir du papier &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/parsec-paper-letter.pdf"&gt;Parsec: Direct Style Monadic Parser Combinators For The Real World - Daan Leijen &amp;amp; Erik Meijer - 2001&lt;/a&gt; et au travers d‚Äôun live-coding dirig√© par les tests, il nous montre comment une grammaire √©crite sous la forme &lt;a href="https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form"&gt;EBNF&lt;/a&gt; peut se traduire &lt;em&gt;simplement&lt;/em&gt; en Kotlin. Voici un exemple&lt;/p&gt;&lt;pre&gt;&lt;code class="language-ebnf"&gt;Expr ::= SExp [('+' | '*') Expr] SExpr ::= NUMBER | ('(' Expr ')') &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Donne avec le DSL Kotlin&lt;/p&gt;&lt;div class="language-kotlin highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;Expr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SExp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;charIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt; &lt;span class="n"&gt;Expr&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;SExpr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NUMBER&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'('&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt; &lt;span class="n"&gt;Expr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;')'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;p&gt;Avec la passion qui le caract√©rise, Didier nous montre qu‚Äôen combinant des op√©rations assez simples, avec la puissance offerte par les extensions de fonctions de Kotlin (üíñ) on peut facilement cr√©er des parsers par combinaisons de simple parser comme &lt;code class="highlighter-rouge"&gt;returns&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;fails&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;any&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;lazy&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;doTry&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;lookahead&lt;/code&gt;, ‚Ä¶&lt;/p&gt;&lt;p&gt;Une pr√©sentation √† voir pour tout les amoureux des monades.&lt;/p&gt;&lt;h2 id="saider-du-data-oriented-design-pour-√©crire-des-applications-performantes"&gt;S‚Äôaider du Data-Oriented Design pour √©crire des applications performantes&lt;/h2&gt;&lt;p&gt;Les &lt;a href="https://docs.google.com/presentation/d/14IBNbjYnCYrNdMq6hnYdUc2GLbrhS3godn6Nv93fmnA/edit"&gt;slides&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/018xd7xaWWcL-RRpokjObWrGUpAfbP-MYCIs7e1ia6bn8h4Cbb4MjpWaF9sE9xddhybwfQgzyc2bdV7dWDNx2Msc786m5vKhQKySzbiMbbl6Ufz6TstlFTrpqp7hGzIQvmXDbCG62YB2sRX77R9xPb_SVAhtZgZTAanJqeiIZ5XQI8gSi2iVNC0p1cNMRS9egICJCaTlMSeI2mRBS3bG2f_320C_rNBEaOpfZCOjnnQ7pfJdcQlFVXsH5LBhq494WBf0_jlCuTo8dCqaz_qJTi-ufVMy05wsSQLdQ1cVKTy7-emAJ64XOjF-S_bTZC12zbVutRelbvU-sBictOTrErD0HBSsigC1e7WjAFueuL7oM-Be0dSePmhGWTJLVVTA5lG6gUc5LdVVn_rls2i4JArDcHLI-rCdZ0osUPbOJ-pEOZPOvlxoCL5yznFAqCX0CebeH8DrY7X0e6k_v1gKkjv3wrfieCPW8lEj7i9ds7H02GX8JBgAIYbmQwTnU6A-tSLtxxG6OpZEbweuL9E_aOA62e8P_gXIoLewrCtP46PvhL9Ebz7Jy3kSlMsxaOfPUC6WLkCFabLykhvMiLZIdJl1O8JyFoUShk-C1e-QOkHhnymQVVePeLBzW6KU8qSRk93DkKXQyQaZqpa9A-tHItTns4dd169m=w477-h318-no" alt="Alessio Coltellacci" /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/lightplay8"&gt;Alessio Coltellacci&lt;/a&gt; nous parle du &lt;em&gt;Data-Oriented Design&lt;/em&gt;, une approche pour am√©liorer les performances de nos applications.&lt;/p&gt;&lt;p&gt;Pour mieux comprendre ces performances, il faut descendre en bas, au niveau du CPU et de ses caches, et comprendre que la latence de la r√©cup√©ration nos donn√©es est clef pour les performances. Un peu de code &lt;code class="highlighter-rouge"&gt;C&lt;/code&gt; ou assembleur ne fait pas de mal (tant que √ßa reste sur des slides).&lt;/p&gt;&lt;p&gt;Ensuite on peut remonter dans nos couches, comme dans les structures de donn√©es. Pour finir un exemple en JavaScript nous montre aussi que cela concerne aussi des langages de plus haut niveau.&lt;/p&gt;&lt;p&gt;En s√©lectionnant les structures de donn√©es qui marche bien avec notre hardware, on peut facilement am√©liorer les performances de nos parcours de donn√©es, il n‚Äôy a pas que la complexit√© algorithmique qui entre en jeu. Attention, bien sur √† effectuer les bonnes mesures.&lt;/p&gt;&lt;h2 id="fear-the-ponies"&gt;Fear the ponies&lt;/h2&gt;&lt;p&gt;Pour finir j‚Äôai fait un atelier anim√© par &lt;a href="https://twitter.com/raphaelwac"&gt;Rapha√´l Wach&lt;/a&gt; et &lt;a href="https://twitter.com/MiKaDo_O"&gt;Mickael Metesreau&lt;/a&gt; sur la cryptographie.&lt;/p&gt;&lt;p&gt;Le sujet peut faire peur, mais l‚Äôatelier √©tait tr√®s accessible, on code avec le langage de votre choix, et on parcourt diff√©rentes situations : d√©chiffrage, chiffrage, avec diff√©rents algorithme.&lt;/p&gt;&lt;p&gt;Je pr√©f√®re ne pas en dire beaucoup plus sur le contenu, car √ßa risquerait de trop d√©voiler de choses, mais je vous recommande chaudement cet atelier si vous avez l‚Äôoccasion de le faire.&lt;/p&gt;&lt;p&gt;Je recommande aussi la lecture du livre de Simon Singh: &lt;em&gt;Histoire des codes secrets&lt;/em&gt;.&lt;/p&gt;&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;&lt;p&gt;J‚Äôai pass√© de super moments √† Sunny-Tech, c‚Äôest assez g√©nial dans une conf√©rences de pouvoir passer du temps dehors dans une ambiance d√©contract√©e. Et encore je n‚Äôai pas parl√© du repas des &lt;em&gt;speakers&lt;/em&gt;, de la keynote d‚Äôouverture, de CQRS, de la soir√©e, d‚Äô&lt;a href="https://arrow-kt.io/"&gt;Arrow&lt;/a&gt;, des chocolatines, du ‚òÄÔ∏è ‚Ä¶ Pour vous faire une id√©e, vous pouvez consulter &lt;a href="https://photos.google.com/share/AF1QipP0gVKc2UuMSadr7u-4IUnOdQjgY_4d0PRTIsx-Y1XDQIW2J8Ufrjp-iFW3AX2u5g?key=VVJiUGVsQl9PalFlSmpkRVJ1WGh0eWhoRW9JU253"&gt;les photos&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Un grand merci √† MonkeyPatch, aux organisateurs, aux sponsors (merci Klanik pour le chapeau), aux speakers, et √† tous les gens avec qui j‚Äôai eu la chance d‚Äô√©changer.&lt;/p&gt;&lt;p&gt;Vivement l‚Äôan prochain !&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/jEXHIuv9rANpkXDPr5Io9n48UVzOtFFK11RbTr3OtnEwhk_duGZvAPxY7YiN3YZV3ZGR9KXlQtB2wEPCSEQ-vJ1zLdX8JrnLOHH1mOui2ZnKijMTBgpU6BYt5q46fVqlu9dTarBV92-DTVNRrnIkbNFZMA96R6M3L6pS6iyK3JkpwZ17lYeEIyCywvRltOgIVbmF2IKmQl1NUnzJQPIiwkGEgBXRVl6YAxbY1bRNp4zFChS-cq24fDBODrkdkLnt6HZQd8wcOvpcXJNzMjLRy73K_keYbfvr5BZyy06CRYYn6OTQlJ8brPkRE8e3a7fZ58Fo3qU76mYxipYGot8G9DQ4AuB9ATf7VhAUb8-keyvzr7mBgOqtTwSOWGPbpn84KqtgiZU_N4AeUN6iB-VCt5c5L9JAmsF0Gds9nntNzBbnhZV65VtnEmW8WuyhgZ5LjAGrLilE0femidM_rZZCbShqUXmTwAXU528VGo_ykQOLdNxDHiMWv6tZ8YGHtXuT9VSp4HvZDSMErHc4jUqYJQHkKsfaqqCKlDLqrATxKcugiMsYeV9pnUugPsNm6NWXRBC69_FK_5L1LXEi1DwkbpnhiQ8OguAvIuNAI1PFcYW0S_iS4cnHawLjhYzy5ApA35giR717Mn-OkWhtNyI8yrcymR93piKA=w1657-h1104-no" alt="Merci" /&gt;&lt;/p&gt;</content> <author> <name>Igor Laborie</name> <email>igor@monkeypatch.io</email> </author> <category term="SunnyTech"/> <category term="conf"/> <category term="Kotlin"/> <category term="DoD"/> <summary>Les grosses chaleurs, le chant des cigales, la philo du Bac., les gr√®ves de la SNCF, et SunnyTech : voil√† l‚Äô√©t√© ! Cette ann√©e, les communaut√©s Montpelli√©raines organisent la premi√®re √©dition de SunnyTech. Pour les toulousains c‚Äôest g√©nial d‚Äôavoir une conf√©rence aussi proche.Voici une petite s√©lection de ce j‚Äôai trouv√© super dans la conf√©rence, mais forc√©ment avec quatres salles en parall√®les, ce n‚Äôest qu‚Äôun petit aper√ßu.</summary> </entry> <entry xml:lang="en"><title>J On The Beach 2018 ‚Äî Review</title><link href="http://www.monkeypatch.io/en/2018/07/05/JOTB-malaga-2018.html" rel="alternate" type="text/html" title="J On The Beach 2018 ‚Äî Review"/> <published>2018-07-05T00:00:00+00:00</published> <updated>2018-07-05T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/07/05/JOTB-malaga-2018</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/07/05/JOTB-malaga-2018.html">&lt;p&gt;&lt;a href="https://jonthebeach.com"&gt;J On The Beach&lt;/a&gt; (JOTB) is &lt;em&gt;‚ÄúA Big Data Conference On The Beach‚Äù&lt;/em&gt; happening in Malaga (Spain) and this year (2018) was its third edition. &lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/plaza_del_obispo.jpg" alt="360 Photo ‚Äî Plaza del Obispo" /&gt;&lt;/p&gt;&lt;hr /&gt;&lt;h1 id="tldr"&gt;tl;dr&lt;/h1&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;The staff was great, the speakers awesome and the talks interesting.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;I felt very comfortable and almost at home during the three days. The atmosphere felt like being at a local conference or meetup but with famous and renowned speakers from around the world.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Everyone I met - speakers/attendees/staff - was accessible and really, really affable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;YES, I totally did copy/paste the three points above from &lt;a href="./../../../2017/08/03/JOTB-malaga-2017"&gt;last year‚Äôs review&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Less great than last year: no diner included, ‚Äújust‚Äù breakfast and lunch so I had to eat outside, like, in tapas bars or restaurants by the beach, yeah poor me‚Ä¶&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Awesome line-up, great diversity, good job there&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Met a few people from last year and a few new people, cool!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Unfortunately I couldn‚Äôt attend the party but I‚Äôm sure it was as great as last year‚Äôs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;hr /&gt;&lt;h1 id="preamble"&gt;Preamble&lt;/h1&gt;&lt;p&gt;I wasn‚Äôt sure I would attend JOTB 2018 because I had more or less decided to attend only one big conference this year, like &lt;a href="https://www.thestrangeloop.com/"&gt;Strange Loop&lt;/a&gt; or the &lt;a href="http://clojure-conj.org/"&gt;Clojure/conj&lt;/a&gt;.&lt;br /&gt; And then I saw &lt;a href="https://jonthebeach.com/speakers"&gt;the speakers&lt;/a&gt; announcements on Twitter, one after the other, and couldn‚Äôt resist.&lt;br /&gt; So here‚Äôs my review of J On The Beach 2018!&lt;/p&gt;&lt;p&gt;&lt;small&gt;Hopefully shorter than last year‚Äôs&lt;/small&gt;&lt;/p&gt;&lt;h1 id="overview"&gt;Overview&lt;/h1&gt;&lt;p&gt;&lt;img src="http://i-rant.arnaudbos.com/img/j-on-the-beach-malaga-2018-review/termica_landscape.jpg" alt="La Termica" /&gt;&lt;/p&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;The title of the conference &lt;em&gt;‚ÄúA Big Data Conference On The Beach‚Äù&lt;/em&gt; is still not a scam: the beach is right there, 200 meters away from the conference venue &lt;a href="http://www.latermicamalaga.com/"&gt;La Termica&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The location was easy to find because it is a cultural center. It is not in the city center, more halfway between the airport and the center and can be reached in 40 minutes walk by the beach. There are hotels around and a bus stop 50m from the entrance, as well as city bikes spots.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The place in itself is nice, the hallways and rooms are large and bright.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The staff was really welcoming, everyone speaking English and willing to assist the speakers and attendees.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;YES, I totally did copy/paste the four points above from &lt;a href="/2017/08/03/JOTB-malaga-2017.html"&gt;last year‚Äôs review&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The registration was sooo smooth. Compared to last year, they‚Äôve split the stream of incoming attendees into two groups by alphabetical order which was a good move.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;I‚Äôll skip the goodies part for this year, they were OK: couple of notepads, stickers, sunglasses, sunscreen ^^&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;h1 id="day1-erlang-workshop"&gt;Day1: Erlang Workshop&lt;/h1&gt;&lt;p&gt;New year, new workshop!&lt;br /&gt; And this year I‚Äôve had the chance to get a taste of &lt;a href="https://www.erlang.org/"&gt;erlang&lt;/a&gt; instructed by no one else than: &lt;a href="https://twitter.com/joeerl"&gt;Joe Armstrong&lt;/a&gt;!&lt;/p&gt;&lt;p&gt;The workshop started with a crash course on Erlang‚Äôs syntax and 101 concepts: Joe Armstrong made us all &lt;strong&gt;open a REPL and experiment&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;We discovered Erlang‚Äôs advanced pattern matching, data structures, destructuring, case statements, function definitions, actors, etc.&lt;br /&gt; A very good introduction but as Joe remarked, all of this we could learn by ourselves, so after 1 or 2 hours of this he pointed us toward &lt;a href="https://github.com/joearms/courses/tree/master/1_day"&gt;this one day course&lt;/a&gt; and to other resources such as his own book or this &lt;a href="http://learnyousomeerlang.com/content"&gt;Learn You Some Erlang for Great Good&lt;/a&gt; book.&lt;/p&gt;&lt;p&gt;The rest of the workshop was pieces of wisdom and stories told by a man who‚Äôs earned his gray hair and seen a lot of things in his career, it was fascinating.&lt;/p&gt;&lt;p&gt;Of course we heard many anecdotes about Erlang and Ericsson but we also learned a lot about ‚Äúthe 4 erlangs‚Äù:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Sequential Erlang&lt;/li&gt; &lt;li&gt;Concurrent Erlang&lt;/li&gt; &lt;li&gt;Fault-tolerant Erlang&lt;/li&gt; &lt;li&gt;Distributed Erlang&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;I especially like the presentation of Erlang as layers and how they stack up to create a language that is really suited to today‚Äôs massively parallel and distributed environments.&lt;/p&gt;&lt;p&gt;Let me plagiarize the &lt;a href="https://github.com/joearms/courses/blob/master/1_day/one_day_erlang.pdf"&gt;chapter 15 of the PDF course&lt;/a&gt; I liked above:&lt;/p&gt;&lt;p&gt;Sequential Erlang:&lt;/p&gt;&lt;p&gt;‚Ä¢ Simple functional language&lt;br /&gt; ‚Ä¢ Lists, tuples, atoms, bignums, floats, ‚Ä¶&lt;br /&gt; ‚Ä¢ Function selection is by pattern matching&lt;br /&gt; ‚Ä¢ Data selection is by pattern matching ‚Ä¢ Variables are immutable&lt;/p&gt;&lt;p&gt;Concurrent Erlang:&lt;/p&gt;&lt;p&gt;‚Ä¢ Adds spawn, send and receive to sequential Erlang.&lt;br /&gt; ‚Ä¢ register [unregister] can be used to associate a name with a process&lt;/p&gt;&lt;p&gt;Fault-tolerant Erlang:&lt;/p&gt;&lt;p&gt;‚Ä¢ catch .. throw and try ‚Ä¶ catch ‚Ä¶ end added to sequential Erlang&lt;br /&gt; ‚Ä¢ link, process_flag(trap_exit, true) added to concurrent Erlang&lt;/p&gt;&lt;p&gt;Distributed Erlang:&lt;/p&gt;&lt;p&gt;‚Ä¢ Add +spawn(Node, Mod, Func, Args) to concurrent Erlang&lt;br /&gt; ‚Ä¢ Or use explicit term passing over sockets&lt;/p&gt;&lt;p&gt;Et Voil√†! You get a ‚Äúmulti-core ready, fault-tolerant distributed programming‚Äù language with a proven track record of successful projects for 30 years and counting.&lt;/p&gt;&lt;h1 id="day-2-talks"&gt;Day 2: Talks&lt;/h1&gt;&lt;h2 id="vlad-mihalcea--transactions-and-concurrency-control-patterns"&gt;Vlad Mihalcea ‚Äî Transactions and Concurrency Control Patterns&lt;/h2&gt;&lt;p&gt;If you‚Äôve read &lt;a href="../j-on-the-beach-jepsen-workshop"&gt;my review from last year‚Äôs Jepsen workshop&lt;/a&gt;, you‚Äôve probably noticed that I like to understand things that fail.&lt;/p&gt;&lt;p&gt;Even if we don‚Äôt go as far as Kyle Kingsbury, pushing the boundaries (and &lt;a href="http://jepsen.io/analyses"&gt;writing fantastic analyses&lt;/a&gt;), we all implicitly know that distributed systems are complicated pieces of software.&lt;br /&gt; We tend to code for the happy path, hope everything works well and in case it doesn‚Äôt, well, what could go wrong?&lt;/p&gt;&lt;p&gt;After all, we‚Äôve used relational databases for years, and ORMs, and we all know that when we use transactions, everything is fine and &lt;code class="highlighter-rouge"&gt;ACID&lt;/code&gt;: our tool and SQL will deal with the complexity‚Ä¶&lt;/p&gt;&lt;p&gt;Of course this isn‚Äôt true, and &lt;a href="https://twitter.com/vlad_mihalcea"&gt;Vlad Mihalcea&lt;/a&gt; is here to raise awareness: we &lt;strong&gt;have&lt;/strong&gt; to understand those concepts.&lt;/p&gt;&lt;p&gt;Different relational databases have different concurrency control mechanism available with different guarantees, each with their own tweaks and tradeoffs. And we must understand those technical details in order to choose a database and write correct software.&lt;/p&gt;&lt;p&gt;Let‚Äôs mention a few concepts:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Serializability&lt;/li&gt; &lt;li&gt;Linearizability&lt;/li&gt; &lt;li&gt;Two-Phase-Locking&lt;/li&gt; &lt;li&gt;MVCC&lt;/li&gt; &lt;li&gt;Snapshot isolation&lt;/li&gt; &lt;li&gt;Dirty read&lt;/li&gt; &lt;li&gt;Stale read&lt;/li&gt; &lt;li&gt;Phantom read&lt;/li&gt; &lt;li&gt;Read skew&lt;/li&gt; &lt;li&gt;Write skew&lt;/li&gt; &lt;li&gt;Lost update&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;I really really make a parallel between his talk and Kyle Kingsbury‚Äôs &lt;a href="http://jepsen.io/talks"&gt;Jepsen series of talks&lt;/a&gt;, because they deal with similar concepts but a different scale (my personal favorite: &lt;a href="https://youtu.be/QdkS6ZjeR7Q"&gt;Jepsen II: Linearizable Boogaloo&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;I‚Äôve talk at length with Vlad during the conference, my feeling was that this talk shouldn‚Äôt be rated as ‚Äúintermediate‚Äù but as ‚Äúexpert‚Äù because of the concepts involved, but he made me change my mind.&lt;/p&gt;&lt;p&gt;This level is indeed ‚Äúintermediate‚Äù given the topic: transactions and concurrency. Every developer with more than 5 years of experience and working with databases should know and understand those concepts.&lt;/p&gt;&lt;p&gt;Of course this is not the case, and this is why talks like Vlad‚Äôs are important.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/4qiV_QhPyIk"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="venkat-subramaniam--exploring-java-9"&gt;Venkat Subramaniam ‚Äî Exploring Java 9&lt;/h2&gt;&lt;p&gt;One does not simply ‚ÄúExplore Java 9‚Äù with &lt;a href="https://twitter.com/venkat_s"&gt;Venkat Subramaniam&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;With Java 10 around the corner you might wonder why bothering with Java 9?&lt;/p&gt;&lt;p&gt;Well, Java 9 brings a few changes and additions to Java that are worth knowing to keep up with the language so it‚Äôs better not to skip it.&lt;/p&gt;&lt;p&gt;Again, this is not new stuff so I won‚Äôt enumerate the updates here but I can mention the new try-with-resources properties, a couple of new operators on &lt;code class="highlighter-rouge"&gt;Stream&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;IntStream&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;Optional&lt;/code&gt;, the new immutable collections factories &lt;code class="highlighter-rouge"&gt;List.of("One", "Two", "Three");&lt;/code&gt;, etc.&lt;/p&gt;&lt;p&gt;Most important in my opinion are the Java modules, and also the feature that will probably be the most ignored feature, but my personal favorite: &lt;code class="highlighter-rouge"&gt;jshell&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Of course Venkat Subramaniam is an awesome speaker and because these days a talk on Java wouldn‚Äôt be a good talk on Java without making fun of Java (?), so go have fun watching him.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/OWOkB80p2DY"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="martin-kelppmann---automerge-making-servers-optional-for-real-time-collaboration"&gt;Martin Kelppmann - Automerge: Making servers optional for real-time collaboration&lt;/h2&gt;&lt;p&gt;I really enjoy learning and reading about distributed systems, database in particular, I find them fascinating.&lt;/p&gt;&lt;p&gt;In this field, &lt;a href="https://twitter.com/martinkl"&gt;Martin Kelppmann&lt;/a&gt;‚Äôs book, &lt;a href="https://dataintensive.net/"&gt;Designing Data-Intensive Applications&lt;/a&gt;, is a really valuable resource to learn about reliability, consistency and scalability issues and find more specialized resources and papers to study the field later on.&lt;/p&gt;&lt;p&gt;In this talk, Martin presents the difference between &lt;strong&gt;consensus&lt;/strong&gt; and &lt;strong&gt;convergence&lt;/strong&gt; and, using really simple words, analogies and examples, slowly makes its way to a very interesting topic: &lt;a href="https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type"&gt;&lt;em&gt;Conflict-Free Replicated Data Type&lt;/em&gt; (CRDTs)&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/automerge/automerge"&gt;Automerge&lt;/a&gt; is a work in progress and the result of studies on CRDTs, their representation and algorithms to automatically resolve concurrent modifications without losing updates and progressing toward replicas state &lt;em&gt;convergence&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Another great aspect is that Automerge does not presuppose of a specific network protocol, it is network-agnostic.&lt;/p&gt;&lt;p&gt;What‚Äôs even more interesting, is that &lt;a href="https://github.com/automerge/automerge"&gt;Automerge&lt;/a&gt;, although a research topic, already has a practical implementation and a library available as an npm package, and it also has a few example applications available on the github page of the project using different network protocols.&lt;/p&gt;&lt;p&gt;I‚Äôm very eager to see what kind of application I could build using CRDTs in the future.&lt;/p&gt;&lt;p&gt;Link: &lt;a href="https://arxiv.org/abs/1608.03960"&gt;A Conflict-Free Replicated JSON Datatype&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/PHz17gwiOc8"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="sergey-bykov--distributed-transactions-are-dead-long-live-distributed-transaction"&gt;Sergey Bykov ‚Äî Distributed Transactions are dead, long live distributed transaction!&lt;/h2&gt;&lt;p&gt;Last year I‚Äôve been really impressed by &lt;a href="http://i-rant.arnaudbos.com/j-on-the-beach-malaga-2017-review/#dharma-shukla-lessons-learnt-from-building-a-globally-distributed-database-service-from-the-ground-up"&gt;Dharma Shukla‚Äôs talk about CosmosDB&lt;/a&gt; and the engineering effort put by Microsoft.&lt;/p&gt;&lt;p&gt;In this talk, &lt;a href="https://twitter.com/sergeybykov"&gt;Sergey Bykov&lt;/a&gt; gives an introductory presentation of &lt;a href="https://dotnet.github.io/orleans/"&gt;Microsoft Orleans&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;It‚Äôs really interesting to see big companies, move back from full eventual consistency models and tackle the problem of distributed transactions.&lt;/p&gt;&lt;p&gt;In a nutshell, Orleans is an actor model (encapsulated state, message passing, ‚Ä¶) based framework for the .NET ecosystem with support for transactions (beta).&lt;/p&gt;&lt;p&gt;And this is really exciting even if you‚Äôre not a .NET aficionado, because it has extensive documentation for you to study if you like to read about distributed systems.&lt;/p&gt;&lt;p&gt;Links:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://adrianmarriott.net/logosroot/papers/LifeBeyondTxns.pdf"&gt;Life Beyond Distributed Transactions: An Apostate‚Äôs Opinion ‚Äì Pat Helland, 2007&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://blog.acolyer.org/2014/11/20/life-beyond-distributed-transactions/"&gt;The Morning Paper on the above publication&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;&lt;a href="https://youtu.be/2ylIl_QToq4"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="jonas-boner--designing-event-first-microservices"&gt;Jonas Boner ‚Äî Designing Event-First Microservices&lt;/h2&gt;&lt;p&gt;‚ÄúDesigning Event-First Microservices‚Äù, is a talk about event sourcing by &lt;a href="https://twitter.com/jboner"&gt;Mr Jonas Bon√©r&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="https://martinfowler.com/eaaDev/EventSourcing.html"&gt;Event sourcing&lt;/a&gt; is one very interesting answer to the kind of problems encountered in microservices, illustrated by the &lt;a href="https://www.google.fr/search?q=death+star+microservices&amp;amp;tbm=isch"&gt;Death Star diagram&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;By emitting events, services can be more naturally decoupled and made reactive to their environment. And we know being &lt;a href="https://www.reactivemanifesto.org/"&gt;reactive&lt;/a&gt; is a concept dear to the heart of Jonas Bon√©r.&lt;/p&gt;&lt;p&gt;In this talk we also get to hear about &lt;a href="http://ziobrando.blogspot.com/2013/11/introducing-event-storming.html"&gt;Event storming&lt;/a&gt; and &lt;a href="http://dddcommunity.org/"&gt;Domain Driven Design (DDD)&lt;/a&gt;, and a few illustrations on how to handle state and side-effects.&lt;/p&gt;&lt;p&gt;If you‚Äôre already familiar with this topic or these concepts, or you‚Äôve already watched a couple of talks by &lt;a href="https://twitter.com/gregyoung"&gt;Greg Young&lt;/a&gt; or read a couple of articles by &lt;a href="https://twitter.com/martinfowler"&gt;Martin Fowler&lt;/a&gt;, you probably won‚Äôt learn a lot by watching this talk, but if you don‚Äôt, by all means please watch this and reconsider your way of building services, it‚Äôs mind blowing.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/iDey1GoAJy0"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h1 id="day-3-talks"&gt;Day 3: Talks&lt;/h1&gt;&lt;h2 id="joe-armstrong--good-ideas-that-we-forgot"&gt;Joe Armstrong ‚Äî Good ideas that we forgot.&lt;/h2&gt;&lt;p&gt;It is hard for me to write a summary of a talk by &lt;a href="https://twitter.com/joeerl"&gt;Joe Armstrong&lt;/a&gt;.&lt;br /&gt; When he‚Äôs telling, you‚Äôre listening.&lt;/p&gt;&lt;p&gt;In this keynote he talked about our relatively young industry‚Äôs fascinating ability to forget about stuff that was invented just a few decades ago.&lt;/p&gt;&lt;p&gt;A few days ago, &lt;a href="https://twitter.com/_andreidan"&gt;Andrei Dan&lt;/a&gt; (whom I met last year &lt;a href="../j-on-the-beach-malaga-2017-review"&gt;at JOTB 2017&lt;/a&gt;) and fellow ‚Äúcraties‚Äù wrote a review of a bunch of talks they attended at JOTB18, among which is a review of this keynote.&lt;/p&gt;&lt;p&gt;I encourage you to read &lt;a href="https://crate.io/a/craties-go-to-j-on-the-beach/"&gt;their review&lt;/a&gt;.&lt;br /&gt; They also cover talks I didn‚Äôt attend so you‚Äôll find other interesting feedbacks.&lt;/p&gt;&lt;p&gt;Anyways, go watch any of his talk, you‚Äôll learn something or listen to a good story, or both.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/YuBi7Qs555U"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="don-syme--the-f-path-to-relaxation"&gt;Don Syme ‚Äî The F# Path to Relaxation&lt;/h2&gt;&lt;p&gt;This is the story of building a language to bridge the gap between functional programming purism and pragmatism, leveraging OO and .NET benefits, and gaining momentum and building a community.&lt;/p&gt;&lt;p&gt;If I were into .NET I‚Äôd sure as heck would give it a try.&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/dsyme"&gt;Don Syme&lt;/a&gt; goods a really detailed explanation of the probles/disputes Microsoft was trying to solve by building a language that would be the synthesis of FP and OO, here are some examples:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Functional VS .NET interoperability&lt;/li&gt; &lt;li&gt;Functional VS Object Oriented&lt;/li&gt; &lt;li&gt;Functional VS Practical&lt;/li&gt; &lt;li&gt;Code VS Data&lt;/li&gt; &lt;li&gt;Pattern Matching VS Abstraction&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;I think the tradeoffs are really sound in what they adopted, what they deprecated and what they kept and decided ‚Äútolerate‚Äù.&lt;/p&gt;&lt;p&gt;I was particularly interested in the community aspect and adoption of the language and what they used to achieve it: openness (remember, Microsoft‚Ä¶), keep it neutral, accepting contributions, etc.&lt;/p&gt;&lt;p&gt;If I were to be snarky however, I‚Äôd say that between the plethora of functional languages available on the JVM today and C# kinda sorta functional abilities, developers on the .NET platform didn‚Äôt have much choice but to embrace this new language for functional programming.&lt;/p&gt;&lt;p&gt;Please don‚Äôt let this last remark get to you, have a look at the talk, it‚Äôs really interesting from a language geek point of view.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/CLuHokcr63k"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="martin-thompson--cluster-consensus-when-aeron-met-raft"&gt;Martin Thompson ‚Äî Cluster Consensus: when Aeron met Raft&lt;/h2&gt;&lt;p&gt;This time again, I encourage you to read &lt;a href="https://crate.io/a/craties-go-to-j-on-the-beach/"&gt;CrateDB people‚Äôs review&lt;/a&gt; of this talk by the one and only &lt;a href="https://twitter.com/mjpt777"&gt;Martin Thompson&lt;/a&gt; rather than reading what I could have wrote about it.&lt;/p&gt;&lt;p&gt;They give very interesting links but I really want to point you to the very first paper Martin did talk about in his talk:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-yuan.pdf"&gt;Simple testing can prevent most critical failures: an analysis of production failures in distributed data-intensive systems Yuan et al. OSDI 2014&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://blog.acolyer.org/2016/10/06/simple-testing-can-prevent-most-critical-failures/"&gt;The Morning Paper on the above publication&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;&lt;a href="https://youtu.be/8Q1qbgAcOv8"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="shagufta-gurmukhdas--real-time-object-detection-coz-yolo"&gt;Shagufta Gurmukhdas ‚Äî Real-time object detection coz YOLO!&lt;/h2&gt;&lt;p&gt;Machine learning and deep learning have been really hot topics for the past couple of years. Take projects such as &lt;a href="https://en.wikipedia.org/wiki/AlphaGo"&gt;AlphaGo&lt;/a&gt; for instance: The program‚Äôs victory over human the world‚Äôs best Go players and its the next versions (AlphaGo Zero and AlphaZero) achievements are pretty darn impressive.&lt;/p&gt;&lt;p&gt;The future is bright for computerized human assistance and engineers willing to get their feet wet can now find industry-grate libraries and tons of learning resources online.&lt;/p&gt;&lt;p&gt;I know near nothing about deep learning and neural networks myself but I‚Äôm currently working at a clients which is the world‚Äôs largest supplier of Earth observation systems so even if I‚Äôm not working on image analysis per say I‚Äôm one way on another into this atmosphere (no pun intended).&lt;/p&gt;&lt;p&gt;Anyways, I was really interested to go to this talk by &lt;a href="https://twitter.com/shaguftamethwan"&gt;Shagufta Gurmukhdas&lt;/a&gt; to discover &lt;a href="https://pjreddie.com/darknet/yolo/"&gt;YOLO (You Only Look Once)&lt;/a&gt;, a ‚Äúreal-time object detection system‚Äù by &lt;a href="https://twitter.com/pjreddie"&gt;Joe Redmon&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Shagufta gave a really nice talk composed of a lightweight introduction to &lt;a href="https://en.wikipedia.org/wiki/Artificial_neural_network"&gt;neural nets&lt;/a&gt;, a presentation of YOLO and then a very entertaining demo of an object detection application first from an image source, then from a video recording and finally from a live webcam stream using Python, &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt; and &lt;a href="https://opencv.org/"&gt;OpenCV&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Kudos for the live-demo, this was great!&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;I‚Äôve played with motion detection using OpenCV last summer, for my client, where I was building a stream processing prototype using &lt;a href="http://storm.apache.org/"&gt;Apache Storm&lt;/a&gt; and needed a dummy algorithm to put in there for the algorithmic part.&lt;/p&gt;&lt;p&gt;I didn‚Äôt put a lot of thoughts into it but adding object detection would be an fun use-case and this presentation definitely made it more interesting.&lt;br /&gt; I‚Äôve used the latest version at the time which was 3.3 and support for YOLO has now been added in version &lt;a href="https://github.com/opencv/opencv/wiki/ChangeLog#version331"&gt;3.3.1&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;The partial Darknet parser, enough to parse YOLO models, as well as the layers to support a few variations of YOLO object detection networks have been integrated.&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;I‚Äôll definitely try to write something about this in the future.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/ShaguftaMethwani/yolo-jotb"&gt;The code is available on GitHub&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/ej9wFtHZu4c"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="mario-fusco--lazy-java"&gt;Mario Fusco ‚Äî Lazy Java&lt;/h2&gt;&lt;p&gt;Lazy lazy lazy. Kids are lazy when it comes to chores and homework, or not!&lt;br /&gt; According to &lt;a href="https://twitter.com/mariofusco"&gt;Mario Fusco&lt;/a&gt; they just do optimizations to minimize the effort they must provide, and this is what we should make our programs do.&lt;/p&gt;&lt;p&gt;Java is not a lazy language by default, it evaluates right away. It has short-circuit evaluation to simulate this in the case of &lt;code class="highlighter-rouge"&gt;||&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;&amp;amp;&amp;amp;&lt;/code&gt; and other operators but it is fundamentally eagerly evaluated.&lt;/p&gt;&lt;p&gt;Then comes the &lt;code class="highlighter-rouge"&gt;Stream&lt;/code&gt; API in Java 8 which provides a specification for data manipulation instructions but which is not fully lazy.&lt;/p&gt;&lt;p&gt;Mario presents several examples of problems (primes, big palindromes) that can be made efficient with laziness and how to implement them using Java with recursion, which leads to stack overflows and from tail call optimization (or lack thereof in Java) to trampolines.&lt;/p&gt;&lt;p&gt;Fantastic speaker, of course.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/iIEd12Q_umo"&gt;The video is now available on Youtube.&lt;/a&gt;&lt;/p&gt;&lt;h2 id="hadi-hariri--asynchronous-programming-with-kotlin"&gt;Hadi Hariri ‚Äî Asynchronous Programming with Kotlin&lt;/h2&gt;&lt;p&gt;It won‚Äôt come as a surprise to people who know me to read that I have strongly mixed feelings about Kotlin itself, but I wanted to hear about Kotlin coroutines from the source (JetBrains).&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/hhariri"&gt;Hadi Hariri&lt;/a&gt; is a local from Malaga and as he joked himself: he might have been the most affordable speaker for the conference organizers this year.&lt;/p&gt;&lt;p&gt;His talk about Kotlin coroutines was really well put with a lot of code examples for various scenarios and running code samples.&lt;/p&gt;&lt;p&gt;If you‚Äôve never heard of the concept of green threads, fibers or coroutines (minus the implementation details) in other languages, or if you are interested in to use this feature in Kotlin, don‚Äôt miss this talk.&lt;br /&gt; Hadi Hariri is a great speaker.&lt;/p&gt;&lt;p&gt;The video is not yet available on Youtube, so I‚Äôve found &lt;a href="https://youtu.be/krfGMLuhB8M"&gt;this recent recording&lt;/a&gt; from a few months ago.&lt;/p&gt;&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;&lt;p&gt;Much like the previous year, J On The Beach 2018 has been a really interesting conference and joyful experience.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Thanks a lot to the organizers, speakers and other attendees for the great event.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Who knows, I might even come back next year for the third time in a row ¬Ø\&lt;em&gt;(„ÉÑ)&lt;/em&gt;/¬Ø&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Virtual handshake to &lt;a href="https://twitter.com/rosacastilloPhD"&gt;Rosa Castillo&lt;/a&gt; and &lt;a href="https://twitter.com/vlad_mihalcea"&gt;Vlad Mihalcea&lt;/a&gt; for the Hallway Track and fun time during the breaks.&lt;/li&gt; &lt;li&gt;Also to &lt;a href="https://twitter.com/rocketarium"&gt;Andrei Dan&lt;/a&gt; and &lt;a href="https://jonthebeach.com/speakers/40/Max+Novelli"&gt;Max Novelli&lt;/a&gt;, it was great to see you again after JOTB17&lt;/li&gt; &lt;li&gt;Final thank you note to &lt;a href="http://www.monkeypatch.io/"&gt;MonkeyPatch&lt;/a&gt; (my employer) for allowing the budget to attend a conference in Malaga &lt;strong&gt;once again&lt;/strong&gt;!&lt;/li&gt; &lt;/ul&gt;</content> <author> <name>Arnaud bos</name> <email>arnaud@monkeypatch.io</email> </author> <category term="JOTB"/> <category term="Distributed Systems"/> <category term="Databases"/> <summary>J On The Beach (JOTB) is ‚ÄúA Big Data Conference On The Beach‚Äù happening in Malaga (Spain) and this year (2018) was its third edition.</summary> </entry> <entry xml:lang="fr"><title>MKTD#6, le Stream processing avec #Flink et #Kafka</title><link href="http://www.monkeypatch.io/en/2018/06/20/MKTDs-articles-7.html" rel="alternate" type="text/html" title="MKTD#6, le Stream processing avec &amp;#35;Flink et &amp;#35;Kafka"/> <published>2018-06-20T00:00:00+00:00</published> <updated>2018-06-20T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/06/20/MKTDs-articles-7</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/06/20/MKTDs-articles-7.html">&lt;h1 id="mktd6-le-stream-processing-avec-flink-et-kafka"&gt;MKTD#6, le Stream processing avec #Flink et #Kafka&lt;/h1&gt;&lt;p&gt;Vendredi 16 Mars 2018, nous nous sommes retrouv√©s une fois de plus (pour notre plus grand plaisir) chez &lt;a href="https://www.harrycow.com/"&gt;Harrycow Coworking&lt;/a&gt;, pour exp√©rimenter 2 technos de Stream processing : Apache Flink et Kafka Streams.&lt;/p&gt;&lt;!--more--&gt;&lt;p&gt;&lt;img src="/public/images/mktd6/1.jpg" alt="PHOTO 1" /&gt;&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Nous n‚Äôavons plus besoin de vous pr√©senter les MKTD ! Si ? √Ä priori pas pour tout le monde, alors on fait un bref rappel : Chaque MonkeyTechDays (MKTD) r√©unit entre 30 et 45 Tech Addicts, passionn√©s de d√©v. En √©quipe, nous exp√©rimentons, √©valuons les technos innovantes sous forme de d√©fis techniques. Une journ√©e au plus pr√®s du code, fun et d√©contract√©e, o√π des coachs passionn√©s aident les participants √† r√©aliser des exos de niveau soutenu. Pour plus de d√©tails sur l‚Äôorganisation de la journ√©e, on vous invite √† regarder &lt;a href="https://www.meetup.com/fr-FR/MonkeyTechDays/"&gt;le planning de la journ√©e&lt;/a&gt; ou de parcourir &lt;a href="http://www.monkeypatch.io/2018/02/05/MKTDs-articles-1.html"&gt;nos premiers articles.&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;Pour le MKTD#6, nous avons choisi le sujet du traitement de flux (‚ÄúStream processing‚Äù) car c‚Äôest d√©sormais un concept incontournable du Big Data. Les technos de Stream processing √©voluent tr√®s vite, on a d√©cid√© d‚Äôen exp√©rimenter les deux ‚Äúfr√®res‚Äù de la grande famille d‚ÄôApache. Flink et Kafka excellent de plus en plus dans ce domaine. &lt;a href="https://twitter.com/arnaud_bos"&gt;Arnaud&lt;/a&gt; et &lt;a href="https://twitter.com/glmxndr"&gt;Guillaume&lt;/a&gt;, 2 Monkeys confirm√©s, ont respectivement imagin√© et confectionn√© une s√©rie de tp/exos/d√©fis √† relever tout au long de ce MKTD.&lt;/p&gt;&lt;h2 id="les-technos-exp√©riment√©es"&gt;Les technos exp√©riment√©es&lt;/h2&gt;&lt;h3 id="flink"&gt;Flink&lt;/h3&gt; &lt;p&gt;&lt;a href="https://flink.apache.org/"&gt;Flink&lt;/a&gt; est un framework ‚ÄúBig Data‚Äù sortant de l‚Äôincubateur Apache qui gagne en popularit√©, bas√© sur l‚Äôunification du batch et du streaming, et dont la signature est une gestion du temps (event time vs processing time) qui lui conf√®re toute sa puissance. Son API riche permet de d√©couper les √©tapes de processing en unit√©s de calcul mod√©lisant un dataflow.&lt;/p&gt;&lt;p&gt;Comme les autres frameworks ‚ÄúBig Data‚Äù, Flink se d√©ploie sous forme d‚Äôun cluster comprenant un master et de workers, le premier distribuant le travail d√©crit par le dataflow aux seconds. Les couches d‚Äôabstraction de l‚ÄôAPI masquent alors le travail de Flink consistant √† g√©rer le parall√©lisme et la gestion de l‚Äô√©tat.&lt;/p&gt;&lt;p&gt;Enfin, Flink dispose de nombreux ‚Äúconnecteurs‚Äù permettant de collecter ou d‚Äô√©mettre des donn√©es de ou vers des syst√®mes tiers, et de librairies de plus haut niveau permettant :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;d‚Äôex√©cuter des requ√™tes directement sur un job en cours d‚Äôex√©cution,&lt;/li&gt; &lt;li&gt;de construire et requ√™ter des donn√©es sous forme de tables (√† la SQL) ou de graphes,&lt;/li&gt; &lt;li&gt;ou encore de Machine Learning.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;&lt;img src="/public/images/mktd6/2.jpg" alt="PHOTO 2" /&gt;&lt;/p&gt;&lt;h3 id="kafka-streams"&gt;Kafka Streams&lt;/h3&gt; &lt;p&gt;&lt;a href="https://kafka.apache.org/documentation/streams/"&gt;Kafka Streams&lt;/a&gt; permet de d√©velopper des applications distribu√©es sans avoir recours √† un cluster autre que Kafka, ce qui simplifie leur d√©ploiement. La librairie permet de coder des services de stream processing, et met √† disposition une API de type FRP, s‚Äôappuyant sur le messaging et la persistance de Kafka.&lt;/p&gt;&lt;p&gt;Kafka Streams introduit le concept de KTables, qui donne acc√®s √† la derni√®re valeur pour une cl√© donn√©e, √©mulant des updates de BDD relationnelles. L‚ÄôAPI permet d‚Äôeffectuer des op√©rations de transformation, de branchage et de jointures ainsi que de garder de l‚Äô√©tat. Tout ceci s‚Äôappuie sur des topics Kafka g√©r√©s directement par la librairie.&lt;/p&gt;&lt;p&gt;Enfin, Kafka Streams b√©n√©ficie √©galement des autres outils de la suite Confluent, tels que le Schema Registry ou Kafka Connect, qui met √† disposition de nombreux connecteurs pour traiter des donn√©es depuis ou vers des syst√®mes tiers.&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/mktd6/3.jpg" alt="PHOTO 3" /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/1eeK-15lABBD5DixMUHiKXYWYoJER0_hmDBIx359MNtY/edit?usp=sharing"&gt;Voir les slides d‚Äôintroduction&lt;/a&gt;&lt;/p&gt;&lt;h3 id="les-exercices"&gt;Les exercices&lt;/h3&gt; &lt;p&gt;Pour exp√©rimenter ces deux technos, nous avons donn√© un th√®me aux exercices pour toute la journ√©e.&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Tous les probl√®mes pos√©s s‚Äôinscrivent dans un contexte de simulation de march√© : le march√© de la banane ! Les participants prennent le r√¥le de singes-traders jouant en bourse sur l‚Äôaction de la banane.&lt;/p&gt; &lt;/blockquote&gt;&lt;h4 id="le-matin"&gt;Le matin&lt;/h4&gt; &lt;p&gt;Les exercices des deux √©quipes sont identiques, mais chacun doit les r√©soudre avec sa techno pr√©f√©r√©e. Les participants d√©couvrent les op√©rateurs de base permettant de transformer un flux de donn√©es, d‚Äôeffectuer des branchements avant de r√©unifier les r√©sultats au sein d‚Äôun seul flux de sortie, d‚Äôeffectuer des traitements d‚Äôagr√©gation sur des fen√™tres de temps glissantes ou encore de g√©rer de l‚Äô√©tat. Chaque exercice pr√©sente un d√©tail d‚Äôimpl√©mentation d‚Äôun trader, afin de familiariser les participants avec le march√© de la banane.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/monkeytechdays/mktd6-flink"&gt;Voir les exercices Flink&lt;/a&gt; &lt;a href="https://github.com/monkeytechdays/mktd6"&gt;Voir les exercices Kafka&lt;/a&gt;&lt;/p&gt;&lt;h4 id="lapr√®s-midi"&gt;L‚Äôapr√®s-midi&lt;/h4&gt; &lt;p&gt;D√©j√† familiaris√©s avec les r√®gles du jeu par les exos du matin, le d√©fi de l‚Äôapr√®s-midi est lanc√© : les participants doivent coder leur propre algo de trading ! Le prix d‚Äôune action ‚Äúbanane‚Äù fluctue al√©atoirement, mais les participants peuvent l‚Äôinfluencer via twitter avec le hashtag #MKTD. Les joueurs s‚Äôabonnent au flux du prix des actions et leur algo doit choisir entre plusieurs strat√©gies : acheter/vendre des actions, investir dans une plantation, ou bien‚Ä¶ nourrir des singes avec les bananes ! Le serveur calcule alors les r√©sultats des transactions et re-publie l‚Äô√©tat des traders avec un score affich√© en temps r√©el.&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Mais attention, le score n‚Äôest pas l‚Äôargent ou les actions accumul√©es, mais le nombre de singes nourris !&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="moments-forts-et-bilan-de-la-journ√©e"&gt;Moments forts et bilan de la journ√©e&lt;/h2&gt;&lt;p&gt;Encore merci au sponsor pour sa pr√©sence et son soutien lors de cette √©dition ! &lt;a href="https://twitter.com/mattrouget"&gt;Matthieu Rouget&lt;/a&gt;, responsable technique chez &lt;a href="https://twitter.com/AirbusSpace"&gt;Airbus Defence &amp;amp; Space&lt;/a&gt;, nous a pr√©sent√© plusieurs de leurs projets sur le traitement des donn√©es massives issues de satellites d‚Äôobservation de la terre. (franchement sympa la stack)&lt;/p&gt;&lt;p&gt;On remercie √©galement &lt;a href="https://twitter.com/confluentinc"&gt;Confluent&lt;/a&gt; et &lt;a href="https://twitter.com/dataArtisans"&gt;dataArtisans&lt;/a&gt; pour les t-shirts et les stickers qu‚Äôils nous ont envoy√©s. On a profit√© de ces cadeaux pour lancer un d√©fi commun pour faire gagner √† tout le monde un t-Shirt. D√©fi relev√© !&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/mktd6/4.jpg" alt="PHOTO 4" /&gt;&lt;/p&gt;&lt;p&gt;On remercie de m√™me l‚Äôensemble des participants. Un sp√©cial grand merci √† ceux qui nous ont fait des retours. √áa fait plaisir de voir que l‚Äôambiance √©tait une fois de plus au rendez-vous et que vous voulez tous en refaire :) Et ceci bien que les exercices √©taient parfois un peu compliqu√©s.&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/mktd6/5.png" alt="PHOTO 5" /&gt;&lt;/p&gt;&lt;p&gt;On se retrouve au prochain MKTD ?&lt;/p&gt;&lt;p&gt;Les g√©ants du Web tels que Google, poussent de plus en plus la d√©mocratisation de ces standards du Web √† grande √©chelle. Vendredi 21 septembre 2018, on tentera au MKTD#7 d‚Äôexp√©rimenter les Web Components nativement ou avec Stencil.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.meetup.com/fr-FR/MonkeyTechDays/events/251431123/"&gt;Rdv sur Meetup&lt;/a&gt; pour en savoir plus sur l‚Äô√©v√©nement&lt;/p&gt;&lt;p&gt;N‚Äôh√©sitez pas √† vous aussi proposer des sujets pour les prochains MKTD, en d√©taillant vos id√©es sur le &lt;a href="https://github.com/monkeytechdays/cfp"&gt;Cfp&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;‚Üê Article pr√©c√©dant &lt;a href="http://www.monkeypatch.io/2018/02/05/MKTDs-articles-6.html"&gt;MKTD#5&lt;/a&gt;&lt;/p&gt;</content> <author> <name>Alteanne Fernandez</name> <email>alteanne@monkeypatch.io</email> </author> <author> <name>Matthieu Caylet</name> <email>matthieu@monkeypatch.io</email> </author> <author> <name>Arnaud bos</name> <email>arnaud@monkeypatch.io</email> </author> <author> <name>Guillaume Andrieu</name> <email>guillaume@monkeypatch.io</email> </author> <category term="MonkeyTechDay"/> <category term="Tech days"/> <category term="MKTD"/> <category term="Tech Addicts"/> <category term="Techno"/> <category term="flink"/> <category term="kafka"/> <summary>MKTD#6, le Stream processing avec #Flink et #KafkaVendredi 16 Mars 2018, nous nous sommes retrouv√©s une fois de plus (pour notre plus grand plaisir) chez Harrycow Coworking, pour exp√©rimenter 2 technos de Stream processing : Apache Flink et Kafka Streams.</summary> </entry> <entry xml:lang="fr"><title>Breizhcamp 2018</title><link href="http://www.monkeypatch.io/en/2018/05/20/Breizhcamp-2018.html" rel="alternate" type="text/html" title="Breizhcamp 2018"/> <published>2018-05-20T00:00:00+00:00</published> <updated>2018-05-20T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/05/20/Breizhcamp-2018</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/05/20/Breizhcamp-2018.html">&lt;h1 id="breizhcamp"&gt;Breizhcamp&lt;/h1&gt;&lt;p&gt;On a √©t√© pas mal occup√©s ces dernier temps avec les diff√©rentes conf√©rences, voici enfin une petite s√©lection de ce qu‚Äôon a vu √† &lt;img src="http://www.breizhcamp.org/img/logo.png" alt="BreizhCamp 2018" /&gt; 2018. &lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;La conf√©rence s‚Äôest d√©roul√©e cette ann√©e √† l‚Äôuniversit√© Rennes 1 et son th√®me √©tait ‚ÄòRetour vers le futur‚Äô. Super th√®me que les organisateurs, sponsors et speakers on bien pouss√©.&lt;/p&gt;&lt;blockquote class="twitter-tweet" data-lang="fr"&gt;&lt;p lang="fr" dir="ltr"&gt;Pour sa conf√©rence annuelle, et √† l&amp;#39;Ouest, le &lt;a href="https://twitter.com/breizhcamp?ref_src=twsrc%5Etfw"&gt;@breizhcamp&lt;/a&gt; a fait venir une DeLorean sur le campus de &lt;a href="https://twitter.com/UnivRennes1?ref_src=twsrc%5Etfw"&gt;@UnivRennes1&lt;/a&gt; : tout va bien !! Et c&amp;#39;est en direct sur Youtube ! &lt;a href="https://twitter.com/hashtag/ilssontfouscesbretons?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#ilssontfouscesbretons&lt;/a&gt; &lt;a href="https://t.co/wBB6Pz52sI"&gt;pic.twitter.com/wBB6Pz52sI&lt;/a&gt;&lt;/p&gt;&amp;mdash; VincentLescalier_Pro (@VLescalier_Pro) &lt;a href="https://twitter.com/VLescalier_Pro/status/979275891032449025?ref_src=twsrc%5Etfw"&gt;29 mars 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h2 id="jour-1"&gt;Jour 1&lt;/h2&gt;&lt;h2 id="notre-lab-kotlin"&gt;Notre lab Kotlin&lt;/h2&gt;&lt;p&gt;On a commenc√© la conf√©rence par donner un Lab sur Kotlin: &lt;code class="highlighter-rouge"&gt;Kotlin par l'exemple&lt;/code&gt;. C‚Äô√©tait l‚Äôoccasion de partager notre entousiasme sur ce langage qu‚Äôon adore.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/czHolxUoyHZU53tEvewaRN4IVeWhpIMoKJoefyAU9oqGP-NvhJKG_DnONyE8x8Yf0M-jLp4FxVvfILiZMPrRSbmuiFhkr7aw0UpwTe--dcPuvJm82FDj9hzl2wK0Lb5I6UDwr4jfdliQa1UG7ThCdMz1v7D9Plsd3HBLpOKDLHIA7y0RQ-ZodQa7kPsL9OhNkicBNK69zai5R3dLAJQ1gjUSmuM7cQVC-uZW90rOVEHZtGEtFEqQYfLTlxYJfMuSM4lqrjJgKfT_NK7v9mjMloDuVIv-WBcjRh3BXDWHWFzZ6BC4coR4bfYgzA6sUMaW3rQrzvQFUJz29OdYHK45sJ9dmqBUQk0j2GMqU407hBeJU0YCxj2IJFNcJiOy7ncWm3W4DzgtE38C4kuTdC3L24aosoVui2zSolqNVl9HMyiwnCnMAGTKrNh5XmVBDi0az6brBzSBTikgKF21aes1h8jQGh1c96wU79Jn4VMoioYE8CmP7lHSnEfOlGunXigA6D0TzEWpqkLpZ5JT7dsVG6MisJ5LKohrspJ0PM1m9cqpapDs_JteSBhQ5A3OEOsTLRzRRVefDGXhtKIjvMNAGSDrSh5wbj_HpAvV301jc5COw3-I8Dnhj_LPbatDpskNQdDmHyq8GRtrXIkxdTHjDuU_dkK89XWFMA=w1207-h905-no" alt="Lab Kotlin" /&gt;&lt;/p&gt;&lt;p&gt;Faire un lab avec 70-80 personnes en amphi, √ßa fait faire du sport ! Apr√®s un sondage rapide dans la salle, 90% des gens √©taient venu pour faire la partie Back-End, le reste √©tant r√©parti sur la partie Android et Front. Pas √©tonnant pour une conf√©rence g√©n√©raliste.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/hFgnyQL1Q5qx3ItgW0lWcExC24NOA22_yPBcZByyYeQWHNsd3h1zIkTVPyfdvbc1wz6zWnZtCrbu8NycpPAYppimtDOEvZy5Ppvy0iV6JNSWZgbZ3Ktlp8h7S7_nOt1gQAcoX_cwTDTA04LnaoXDJkaGhl0BaNHxbczOLBybnNwqmKMUMWTXcDyc29OOe8xUvbL-sJTrjbf7abr87LbA7cFIoeKJf_D10Lztx4eKIp3wWoOjs7WiXP1TuMzvPE6idoAiFaFcLbEoLmZO_r90L0-5r56Lf-DvFdXMkvYjxh7Y4_MfmtbOUkJzyX4OWsNNFjChwi2CS2p6KqkPEUbfYxItOu0pGriHFN2CTD000j-SHbQzQiD8zTFrBp5ZpCp34y_k4YDTbObX4Sb00Qofl0noa185dscajQGg1fgmqu1l-CeHrdPvepZdIxSgHMOLND-Eu8A7lQcpPUWRItxhaVMiH8EWMcBREvkaaDl7BrwpKot1Vtq9ki19TnE5zTRKNXDotZeGTKfyITpeP1wqmaLH2KaIxgMtX6reLehfyM2jU2HgP8RH21vW7K_oJaZq6kxASfqxAy-l_G3N_zYO7MVPOV6qBVnLL6QPxc4xwZOC7mi_i8kzHzSS_inv_myzExaemcjl6uMN_Sey75OFUahgzQjHyMak=w1207-h905-no" alt="Notes" /&gt;&lt;/p&gt;&lt;p&gt;On a eu des retours plut√¥t bons, m√™me si on a pas trop compris le ‚Äúmanque de d√©mos‚Äù pour un workshop.&lt;/p&gt;&lt;p&gt;A savoir qu‚Äôon va refaire cet atelier √† &lt;a href="https://sunny-tech.io/schedule/day2?sessionId=3807"&gt;Sunny tech&lt;/a&gt; si des personnes souhaitent y assister.&lt;/p&gt;&lt;h2 id="repas"&gt;Repas&lt;/h2&gt;&lt;p&gt;√Ä ce niveau, certaines autres conf√©rences feraient bien de s‚Äôinspirer de BreizhCamp. Le repas √©tait top, copieux et bon, avec des plats chaud et des couvert en bois :+1:&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/8DDzOI7b6HmYHlGU02RBT1UEgt5ZYncGefpzVi9QAEyZGZgT3wM090ZD6COwD7ZutOI7gvJ61oFBqiULosk9nV7kQRqMl3zvr9vZN5e00VFKw9AxN-KHdoXSfodSSKk5VN_FGvMtSmzhGh4FkVCQL_0yyJ9bw_200VoEhaUpUpUGtYDIEFtwISbztqbPuk_g3VXMOqg1DoOUm0WeBE4Lb-Hm9RhONk7VN5T1Swkqn66vsmLgGrke_cFhRxlEMz3CW985BgmGA_oQmNa1oGhi1j6-dBplxAE5qSp06v8vpzDuq1fZy6__E6Qg1aGf7Ly3Kpr_qTKdHwVdDPtI9B9Jnmiyfa8jaozAKI_u2Ed1-xwVtqT3P5dG1zgSicJtUY9hl7KBWIGhQjJV1Gw_9Ke3CPiALM1iDXj7kkdYyrvP_7qeT10SgLbxpl_ZDu2cVL1ygUHQkO4Ws_DcIfanre0BmeOWTx5JbC5RgtT190uoyLSI193bd9Owdl6m0H5JKVYXd_Vdt6TpbYxHW3PRM2-2m6eM3vh_13TUphKDGVyb2dJCcZ4iKBZjkOdFgAtvBq1HJrTAyG6OIRisBcUhPNiHDWeZp0v0pcHzoRs5PXF_UtqU7mBDFex4R7HwEZ7Nb6wIuXCWc8b28JcQobH-4lQgJ7slHMFU-jX6TQ=w965-h724-no" alt="" /&gt;&lt;/p&gt;&lt;h2 id="warp-10----a-la-recherche-des-exoplan√®tes"&gt;Warp 10 - A la recherche des &lt;a href="https://fr.wikipedia.org/wiki/Exoplan%C3%A8te"&gt;exoplan√®tes&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Apr√®s le repas on a assist√© √† l‚Äôatelier sur Warp10 par l‚Äô√©quipe de &lt;a href="https://twitter.com/HelloExoWorld"&gt;HelloExoWorld&lt;/a&gt;. Sujet tr√®s int√©ressant que la recherche d‚Äôexoplan√®tes √† partir des donn√©es de la NASA et sa sonde Kepler.&lt;/p&gt;&lt;p&gt;Le lab consistait √† utiliser &lt;a href="https://www.warp10.io/"&gt;Warp10&lt;/a&gt;, une TimeSeries Database et son syst√®me de script dans le but de d√©tecter des traces d‚Äôexoplan√®tes. Le moyen le plus simple de d√©tecter une exoplan√®te consiste a d√©tecter de faibles variations p√©riodiques des photons recus lors de l‚Äôobservation d‚Äôune partie d‚Äôune √©toile. Une de ces variation correspond au passage d‚Äôune plan√®te devant son √©toile.&lt;/p&gt;&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/873/1*4ZVE4qOEAcVu1EEV1SrKQw.gif" alt="Exoplanet" /&gt;&lt;/p&gt;&lt;p&gt;Avis perso: super workshop, ca donne envie de tester un peu plus Warp10, mais warpscript est assez rebutant (langage √† pile). Vivement qu‚Äôil y ait des DSL au dessus ou des drivers qui permettent d‚Äôutiliser le scripting via des langages de plus haut niveau.&lt;/p&gt;&lt;h2 id="jour-2"&gt;Jour 2&lt;/h2&gt;&lt;h2 id="keynote"&gt;Keynote&lt;/h2&gt;&lt;p&gt;La keynote d√©marre par le th√®me du film jou√© sur sc√®ne, puis Nicolas De Loof nous fait quelques rappels, toujours dans son style inimitable.&lt;/p&gt;&lt;p&gt;La suite de la keynote est assur√©e par Manuel Dorne (alias &lt;a href="https://korben.info/"&gt;Korben&lt;/a&gt;) qui nous parle du principe de &lt;em&gt;Bug Bounty&lt;/em&gt; pour d√©tecter des failles de s√©curit√©. L‚Äôid√©e est d‚Äôavoir √† disposition un gros pool d‚Äôexperts qui sont r√©mun√©r√©s lorsqu‚Äôils trouvent une faille dans un syst√®me d‚Äôinformation.&lt;/p&gt;&lt;p&gt;Les avantages du &lt;em&gt;Bug Bounty&lt;/em&gt; par rapport √† un audit classique sont nombreux (illimit√© dans le temps, profils de chasseurs de bugs diff√©rents, ‚Ä¶). Le &lt;em&gt;Bug Bounty&lt;/em&gt; et l‚Äôaudit sont compl√©mentaires. L‚Äôaudit est souvent fait pour de l‚Äôanalyse de code source, voire de s√©curit√© √† un instant &lt;em&gt;t&lt;/em&gt;, alors que le &lt;em&gt;Bug Bounty&lt;/em&gt; est cens√© avoir une dur√©e plus longue sans acc√®s au code source.&lt;/p&gt;&lt;p&gt;Pour ceux qui sont int√©ress√©s, voir &lt;a href="https://yeswehack.com/fr/index.html"&gt;YesWeHack&lt;/a&gt; et le lien de la &lt;a href="https://www.youtube.com/watch?v=0Wf4JagC0DA"&gt;Keynote&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="vos-applications-sous-st√©ro√Øde-avec-otoroshi-et-izanami"&gt;Vos applications sous st√©ro√Øde avec Otoroshi et Izanami&lt;/h2&gt;&lt;p&gt;Alexandre Del√®gue et Mathieu Ancelin nous parlent de 2 briques r√©cemment mises en Open-source par la &lt;a href="https://github.com/MAIF"&gt;MAIF&lt;/a&gt;: Izanami et Otoroshi.&lt;/p&gt;&lt;p&gt;&lt;img src="https://pbs.twimg.com/media/DTp9RS8W4AEVxrD.jpg" alt="Izanami et Otoroshi" /&gt;&lt;/p&gt;&lt;p&gt;Pour commencer ils expliquent comment √† la MAIF les architectes sont pass√©es de SOAP, Oracle, EclipseRCP √† JavaEE, SpringBoot, React puis √† du WOA, Cloud, Reactive, BigData en √† peu pr√®s 20 ans.&lt;/p&gt;&lt;p&gt;Ils encha√Ænent sur &lt;a href="https://github.com/MAIF/izanami"&gt;Izanami&lt;/a&gt;, un outil qui permet de faire du &lt;em&gt;feature flipping&lt;/em&gt; (activation ou d√©sactivation d‚Äôune fonctionalit√©), du partage de configurations, de l‚ÄôA/B testing, ‚Ä¶&lt;/p&gt;&lt;p&gt;Izanami est construit avec du Play et du Akka, mais c‚Äôest assez ouvert, on peut par exemple utiliser Redis, Cassandra, ElasticSearch, ou encore LevelDb comme support de stockage; ou encore utiliser Kafka, Redis ou Distributed pub-sub comme event store.&lt;/p&gt;&lt;p&gt;Il expose du SSE, du Webhooks, des API REST et il existe des client Scala, Java, NodeJS, Angular, React pour Izanami.&lt;/p&gt;&lt;p&gt;Ensuite ils nous parlent d‚Äô&lt;a href="https://github.com/MAIF/otoroshi"&gt;Otoroshi&lt;/a&gt;, une brique qui sert de gateway (reverse-proxy), et qui permet l‚Äôexposition d‚ÄôAPI. La configuration peut se faire √† chaud, tout en √©tant clusteris√©e pour √©viter les SPOF (&lt;em&gt;Single Point Of Failure&lt;/em&gt;). On peut aussi effectuer une synchronisation des services gr√¢ces aux API de Docker, Kubernetes, etc. Ce type de brique va aussi nous permettre de d√©finir, entre autres, des quotas et des contraintes de s√©curit√©.&lt;/p&gt;&lt;p&gt;On a bien aim√© les d√©mos de ces deux projets, et on esp√®re avoir l‚Äôoccasion de les tester sur des vrai projets. En plus, on a trouv√© particuli√®rement int√©ressant qu‚Äôune soci√©t√© fran√ßaise comme la MAIF ait pris le virage de l‚ÄôOpen-source, esp√®rons que √ßa fera des √©mules.&lt;/p&gt;&lt;p&gt;&lt;a href="https://maif.github.io/"&gt;https://maif.github.io/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=rBM8INPZA5w"&gt;La vid√©e du talk&lt;/a&gt;&lt;/p&gt;&lt;h2 id="byte-buddy"&gt;Byte Buddy&lt;/h2&gt;&lt;p&gt;Pendant ce quickie (15min), Nicolas Comet nous pr√©sente &lt;a href="http://bytebuddy.net/"&gt;Byte Buddy&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Cette Biblioth√®que permet de manipuler du bytecode Java au runtime. Au travers de tests unitaires, il nous montre rapidement quelques cas d‚Äôutilisation int√©ressants :&lt;/p&gt;&lt;ul&gt; &lt;li&gt;AOP&lt;/li&gt; &lt;li&gt;cr√©er une instance d‚Äôune interface dynamiquement&lt;/li&gt; &lt;li&gt;mocking&lt;/li&gt; &lt;li&gt;‚Ä¶&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;On n‚Äôa pas toujours besoin de manipuler du byte-code, mais conna√Ætre les outils qui rendent cela plus facile c‚Äôest toujours bien.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=vSy8S1W3-kM"&gt;La vid√©o du talk&lt;/a&gt;&lt;/p&gt;&lt;h2 id="java-9-10-11"&gt;Java 9, 10, 11‚Ä¶&lt;/h2&gt;&lt;p&gt;Un retour sur les changements impactants de Java 9, en particulier les modules. Sur le fond, JM Doudoux fait bien le tour des probl√®mes et des avantages de ces √©volutions, il nous pr√©sente les outils (jdep, jlink, ‚Ä¶) et leurs principales options qui nous aident √† r√©soudre les probl√®mes courants. Un rapide aper√ßu du contenu de Java 10 (qui est sorti le 20 mars), en particulier sur la nouvelle syntaxe avec &lt;code class="highlighter-rouge"&gt;var&lt;/code&gt; qui inf√®re automatiquement les types.&lt;/p&gt;&lt;p&gt;Enfin la stat√©gie du nouveau cycle de release choisi par Oracle nous interroge, on a l‚Äôimpression qu‚Äôils font √ßa pour forcer l‚Äôachat du support (la version LTS √©tant payante), et les nouveaut√©s ajout√©es nous semblent plus pauvres que les espoirs qu‚Äôon pouvait avoir.&lt;/p&gt;&lt;p&gt;&lt;a href="https://fr.slideshare.net/jmdoudoux/apres-java-8-java-9-et-10-breizhcamp-2018"&gt;Les slides&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dYubeLiObqY"&gt;La vid√©o faite √† Devoxx Fr 2018&lt;/a&gt;&lt;/p&gt;&lt;h2 id="http2"&gt;HTTP/2&lt;/h2&gt;&lt;p&gt;Alexis Hassler nous parle d‚ÄôHTTP/2.&lt;/p&gt;&lt;p&gt;Pour rappel les fonctionalit√©s d‚ÄôHTTP/2 sont : la compression des ent√™tes, protocole binaire, push serveur et multiplexage de requ√™te.&lt;/p&gt;&lt;p&gt;Le multiplexage permet de faire passer plusieurs r√©ponses lors de la m√™me connexion r√©seau ce qui permet d‚Äô√©conomiser de la latence.&lt;/p&gt;&lt;p&gt;Lors de cette conf√©rence Alexis nous a fait faire le tour de l‚Äôimpl√©mentation du HTTP/2 pour nous d√©veloppeurs en utilisant le projet &lt;a href="https://nghttp2.org/"&gt;nghttp2&lt;/a&gt;. Il a abord√© les notions de modes : client, serveur, container et reverse proxy.&lt;/p&gt;&lt;p&gt;Pour r√©sumer, HTTP/2 offre des optimisations non n√©gligeables, mais passer √† HTTP/2 a un impact sur le code: plus besoin des m√©canismes de concat√©nation pour r√©duire la latence, sprites, ‚Ä¶ Attention cela peut avoir un impact sur la consommation des resources du serveur (peut √™tre plus adapt√© sur les m√©canismes d‚Äôevent-loop).&lt;/p&gt;&lt;p&gt;Pour le push, le bilan plus ou moins est plus contrast√©.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=E606Nxnxg14"&gt;La vid√©o&lt;/a&gt; &lt;a href="http://prez.sewatech.fr/http2/#1"&gt;Les slides&lt;/a&gt;&lt;/p&gt;&lt;h2 id="spectre-et-meltdown"&gt;Spectre et Meltdown&lt;/h2&gt;&lt;p&gt;&lt;img src="/public/images/blog/2018-breizhcamp/spectre.png" alt="Spectre" /&gt;&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;Un petit coup de photoshop pour mettre les deux logos l‚Äôun √† c√¥t√© de l‚Äôautre comme pour les logos MAIF serait sympa.&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;Romain Bentz nous pr√©sente les bases de ces failles qui ont √©t√© d√©couvertes il y a presque 1 an et rendues publiques en Janvier 2018.&lt;/p&gt;&lt;p&gt;Pour comprende ce qu‚Äôil se passe, il faut descendre au niveau du CPU.&lt;br /&gt; Pour optimiser les performances, il y a plusieurs niveaux de cache car les acc√®s √† la m√©moire RAM sont trop longs. Le CPU a besoin d‚Äôencha√Æner plusieurs op√©rations pour √©x√©cuter une instruction. Pour des raisons de performances, il va changer l‚Äôordre de certaines instructions, ou faire de la pr√©diction de branches (sauts li√©s aux boucles, aux &lt;code class="highlighter-rouge"&gt;if&lt;/code&gt;, etc). Quand il se trompe, on perd quelques cycles du CPU, mais globalement √ßa am√©liore les performances.&lt;/p&gt;&lt;p&gt;Spectre et Meltdown sont des ‚Äúside channel attack‚Äù, ils vont extraire des informations que le processeur a mises dans le cache, car lors d‚Äôune mauvaise pr√©diction du CPU, le cache n‚Äôest pas vid√©. On peut mesurer le temps d‚Äôacc√®s d‚Äôune valeur pour d√©terminer si elle est dans le cache.&lt;/p&gt;&lt;p&gt;Le principe de Meltdown consiste √† lire une information du noyau sans y √™tre autoris√©, mais le CPU a mis l‚Äôinformation dans le cache, et rejette l‚Äôex√©cution apr√®s la mise en cache. Donc on peut utiliser ce m√©canisme pour lire l‚Äôensemble des informations du noyau. Meltdown touche les processeurs Intel.&lt;/p&gt;&lt;p&gt;Spectre utilise la prediction d‚Äôinformation, il concerne tous les processeurs modernes. L‚Äôid√©e est de forcer le processeur √† faire une mauvaise pr√©diction de branche, pour qu‚Äôil mette une valeur non pr√©vue dans le cache.&lt;/p&gt;&lt;p&gt;Voici une fa√ßon de faire ceci :&lt;/p&gt;&lt;div class="language-c highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2 3 4&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;lenArray&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;varSecret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;junk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;varSecret&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;p&gt;Si on passe syst√©matiquement des valeurs &lt;code class="highlighter-rouge"&gt;i&lt;/code&gt; inf√©rieures √† &lt;code class="highlighter-rouge"&gt;lenArray&lt;/code&gt;, le processeur va pr√©dire qu‚Äôil faut rentrer dans le &lt;code class="highlighter-rouge"&gt;if&lt;/code&gt;. Si, apr√®s ce temps de chauffe, on met une valeur sup√©rieure √† cette taille, on va lire une valeur dans le cache qui n‚Äôappartient pas √† ce tableau.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/Hackndo/presentation/blob/master/201803_Breizhcamp/meltdown_spectre.pdf"&gt;Voir les slides&lt;/a&gt;&lt;/p&gt;&lt;h2 id="les-mains-dans-le-cambouis-de-ma-blockchain"&gt;Les mains dans le cambouis de ma blockchain&lt;/h2&gt;&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Blockchain_Purple.jpg/1920px-Blockchain_Purple.jpg" alt="Block Chain" /&gt;&lt;/p&gt;&lt;p&gt;Fabrice Depaulis et Fr√©d√©ric Chantrel sont venus nous pr√©senter le fonctionnement de la technologie blockchain.&lt;/p&gt;&lt;p&gt;Ils ont commenc√© par une explication rapide de certains principes de la blockchain :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;preuve de travail,&lt;/li&gt; &lt;li&gt;concurrence des n≈ìuds du r√©seau,&lt;/li&gt; &lt;li&gt;ajout de blocks,&lt;/li&gt; &lt;li&gt;soumission de nouveaux blocks au r√©seau.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Pour ensuite nous montrer via du live code en python (en prenant quelques raccourcis) comment d√©velopper sa blockchain via des services REST :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ajout de transaction,&lt;/li&gt; &lt;li&gt;creation de n≈ìuds,&lt;/li&gt; &lt;li&gt;minage des n≈ìuds,&lt;/li&gt; &lt;li&gt;enregistrement des n≈ìuds,&lt;/li&gt; &lt;li&gt;m√©thode r√©solution afin de trouver un consensus.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Ce talk est une initiation au fonctionnement de la blockchain et permet de d√©mystifier un peu ce gros buzzword en nous donnant un cas concret d‚Äôimplementation d‚Äôune blockchain lite.&lt;/p&gt;&lt;p&gt;&lt;a href="https:////github.com/pagesjaunes/blockchain4dev"&gt;Lien du projet github&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=519UIMIs5eI"&gt;La vid√©o&lt;/a&gt;&lt;/p&gt;&lt;h2 id="jour-3"&gt;Jour 3&lt;/h2&gt;&lt;p&gt;Dernier jour de BreizhCamp ; comme la veille, on commence par une keynote. C‚Äôest l‚Äôoccasion de remercier les b√©n√©voles, associations, sponsors, l‚ÄôISTIC, et l‚Äôuniversit√© de Rennes qui accueille la conf√©rence.&lt;/p&gt;&lt;p&gt;L‚Äôannonce de la 7√®me √©dition s‚Äôest faite en &lt;a href="https://www.youtube.com/watch?v=061JcZRJRuU"&gt;vid√©o&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;L‚Äôint√©gralit√© de la keynote est disponible sous &lt;a href="https://www.youtube.com/watch?v=xuawCHkajNM"&gt;youtube&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="transform-a-legacy-application-with-kubernetes-and-istio"&gt;Transform a legacy application with Kubernetes and istio&lt;/h2&gt;&lt;p&gt;David Gagot nous fait une pr√©sentation avec tout int√©gr√© dans ses slides (le terminal, le navigateur‚Ä¶), √ßa √©vite de perdre du temps lors des changements de contexte. :+1:&lt;/p&gt;&lt;p&gt;Sa pr√©sentation est bas√©e sur une application legacy: le Java PetStore en version JavaEE7 (voir le repository &lt;a href="https://github.com/dgageot/petstore"&gt;github&lt;/a&gt;), il nous montre la construction d‚Äôune image docker en partant de celle de wildfly, le d√©ploiement de cette image dans kubernetes (k8s pour les intimes) puis effectue ensuite des transformations (ajout d‚Äôun nginx, nom de domaine, gzip, pages d‚Äôerreurs sp√©cifiques) gr√¢ce notamment √† &lt;a href="https://kubernetes.io/docs/concepts/services-networking/ingress/"&gt;Ingress&lt;/a&gt; et &lt;a href="https://istio.io/"&gt;istio&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Istio permet d‚Äôinjecter une fa√ßade qui va intercepter tous les appels et donc d‚Äôajouter des fonctionnalit√©s √† kubernetes:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Couche SSL&lt;/li&gt; &lt;li&gt;Routing intelligent&lt;/li&gt; &lt;li&gt;Monitoring des services&lt;/li&gt; &lt;li&gt;Contraintes de s√©curit√©&lt;/li&gt; &lt;li&gt;R√©silience : retry, injection d‚Äôanomalies pour valider le comportement de notre syst√®me, circuit breaker, rate limiting, etc.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Tout cela sans avoir touch√© √† notre application legacy.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Z_sNyT0hcVw"&gt;La vid√©o √† Devoxx&lt;/a&gt;&lt;/p&gt;&lt;h2 id="les-vendredis-noirs-m√™me-pas-peur-"&gt;Les vendredis noirs: m√™me pas peur !&lt;/h2&gt;&lt;p&gt;Apr√®s une petite pause repas, avec entre autre de la galette-saucisse, on se dirige vers la pr√©sentation de David Pilato sur la stack Elastic. Vous retrouverez ses slides sur &lt;a href="https://speakerdeck.com/elastic/les-vendredis-noirs-meme-pas-peur-breizhcamp"&gt;speakerdeck&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Apr√®s une rapide pr√©sentation des composants de la stack (Beats, Logstash, Elasticsearch, Kibana), il nous parle en particulier des soucis de scalabilit√© (effet ‚Äú&lt;em&gt;black friday&lt;/em&gt;‚Äù).&lt;/p&gt;&lt;p&gt;En gros il n‚Äôy a pas de formule magique : il faut tester pour trouver la meilleur configuration.&lt;/p&gt;&lt;p&gt;Pour rappel Elasticsearch est constitu√© d‚Äôun cluster de n≈ìuds, dans ces n≈ìuds on trouve des indexes qui sont d√©coup√©s en &lt;em&gt;shard&lt;/em&gt; (partition). Ces partitions sont les unit√©s de travail principales, elles peuvent √™tre primaires ou des r√©plicats, et correspondent √† un index Lucene.&lt;/p&gt;&lt;p&gt;Si vous avez besoin de faire scaler vos instances Elasticsearch, je vous recommande chaudement la &lt;a href="https://www.youtube.com/watch?v=qbJtfv2VNow"&gt;vid√©o de cette pr√©sentation&lt;/a&gt;&lt;/p&gt;&lt;h2 id="fin-de-la-conf√©rence"&gt;Fin de la conf√©rence&lt;/h2&gt;&lt;p&gt;Un grand merci √† l‚Äô√©quipe organisatrice, aux sponsors, et √† toutes les personnes avec qui on a pu discuter lors de la conf√©rence. Vivement la prochaine √©dition !&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DFpv2k35t4Y"&gt;La vid√©o de la keynote de fin&lt;/a&gt;.&lt;/p&gt;</content> <author> <name>Emmanuel Vinas</name> <email>emmanuel@monkeypatch.io</email> </author> <author> <name>Igor Laborie</name> <email>igor@monkeypatch.io</email> </author> <category term="BreizhCamp"/> <category term="Conference"/> <summary>BreizhcampOn a √©t√© pas mal occup√©s ces dernier temps avec les diff√©rentes conf√©rences, voici enfin une petite s√©lection de ce qu‚Äôon a vu √† 2018.</summary> <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.breizhcamp.org/img/logo.png"/> </entry> <entry xml:lang="fr"><title>On a valid√© le sujet du prochain MonkeyTechDay ! #Brainfuck #LOLCODE</title><link href="http://www.monkeypatch.io/en/2018/04/01/MKTD-7-brainfuck-vs-lolcode.html" rel="alternate" type="text/html" title="On a valid√© le sujet du prochain MonkeyTechDay ! &amp;#35;Brainfuck &amp;#35;LOLCODE"/> <published>2018-04-01T00:00:00+00:00</published> <updated>2018-04-01T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/04/01/MKTD#7-brainfuck-vs-lolcode</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/04/01/MKTD-7-brainfuck-vs-lolcode.html">&lt;h1 id="mktd7--on-a-valid√©-le-sujet-du-prochain-monkeytechday--brainfuck-lolcode"&gt;MKTD#7 : On a valid√© le sujet du prochain MonkeyTechDay ! #Brainfuck #LOLCODE&lt;/h1&gt;&lt;p&gt;A peine remis du MKTD#6 sur Flink et Kafka Streams (article √† venir), nous prenons connaissance des retours faits par les participants sur l‚Äôorganisation de l‚Äô√©v√©nement, les technos, les exercices propos√©s et les niveaux des coachs.&lt;!--more--&gt;&lt;/p&gt;&lt;p&gt;Et malheureusement, les compliments ne sont pas au rendez-vous‚Ä¶&lt;/p&gt;&lt;p&gt;Face √† la pluie de critiques et insultes diverses et vari√©es, nous avons d√©cid√© de proposer √† nos participants une session de rattrapage digne de ce nom pour nous racheter.&lt;/p&gt;&lt;p&gt;Et afin de satisfaire notre auditoire, nous avons d√ª √©lever le niveau.&lt;/p&gt;&lt;p&gt;Nous venons de prendre acte du prochain sujet du MKTD#7 qui aura lieu pendant les vacances d‚Äô√©t√©, pour faire venir le plus de monde possible en profitant des cong√©s.&lt;/p&gt;&lt;h2 id="brainfuck"&gt;Brainfuck&lt;/h2&gt;&lt;p&gt;Brainfuck est un langage de programmation minimaliste cr√©√© par Urban M√ºller en 1993.&lt;/p&gt;&lt;p&gt;Comme toutes les bonnes choses, Brainfuck est longtemps rest√© ignor√© par l‚Äôindustrie du logiciel car consid√©r√© trop ‚Äúacad√©mique‚Äù.&lt;/p&gt;&lt;p&gt;Malgr√© son apparente simplicit√©, Brainfuck est un language Turing-complete et nous permet donc d‚Äôexprimer et de r√©soudre de nombreux probl√®mes. De plus, sa concision √©vidente est un atout certain pour la productivit√© des √©quipes de d√©vs.&lt;/p&gt;&lt;p&gt;Fort heureusement, Brainfuck gagne en popularit√© depuis plusieurs mois comme on peut le constater en le comparant √† un langage r√©cent:&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/fool/Brainfuck.png" alt="Brainfuck vs Kotlin" /&gt;&lt;/p&gt;&lt;p&gt;Kotlin a connu un pic de popularit√© apr√®s l‚Äôannonce faite par Google du support de Kotlin pour le d√©veloppement Android.&lt;/p&gt;&lt;p&gt;Fort heureusement, et comme on peut le constater sur ce graphique et sur le sondage d‚Äôopinion pr√©sent√© ci-dessous: &lt;strong&gt;la communaut√© est rapidement revenue √† la raison et commence enfin √† reconna√Ætre Brainfuck √† sa juste valeur&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Les d√©veloppeurs Android le pl√©biscitent notamment pour sa bri√®vet√© et ses capacit√©s multi-plateformes.&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/fool/Brainfuck2.png" alt="Brainfuck vs Kotlin" /&gt;&lt;/p&gt;&lt;p&gt;Afin de vous mettre l‚Äôeau √† la bouche, voici un petit exemple de code Brainfuck qui, je l‚Äôesp√®re, motivera un bon nombre d‚Äôentre vous pour nous rejoindre au prochain MKTD !&lt;/p&gt;&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2 3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;++++++++++[&amp;gt;+++++++&amp;gt;++++++++++&amp;gt;+++++++++++&amp;gt;++++++++++++&amp;gt;+++&amp;gt;+++++++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;-] &amp;gt;++.&amp;gt;---.&amp;gt;++..&amp;gt;+.&amp;gt;++.&amp;gt;-.&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;+++.+.&amp;lt;++++.&amp;gt;--.&amp;gt;&amp;gt;.&amp;lt;&amp;lt;&amp;lt;+.&amp;gt;.---.--.&amp;gt;&amp;gt;. &amp;lt;&amp;lt;&amp;lt;&amp;lt;+++++.&amp;gt;&amp;gt;++.-.&amp;lt;+++++.------.&amp;gt;&amp;gt;.&amp;lt;&amp;lt;&amp;lt;+++.&amp;gt;----.&amp;gt;&amp;gt;-----.&amp;lt;&amp;lt;++.&amp;gt;------.&amp;gt;&amp;gt;+. &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;h2 id="lolcode"&gt;LOLCODE&lt;/h2&gt;&lt;p&gt;Autre outsider, class√© la plupart du temps (de fa√ßon injuste) dans la cat√©gorie des langages dits ‚Äú√©sot√©riques‚Äù, LOLCODE, a √©t√© cr√©√© par Adam Lindsay en 2007.&lt;/p&gt;&lt;p&gt;Issu de la culture populaire du ‚Äúlolcat‚Äù et inspir√© du ‚Äúlolspeak‚Äù, LOLCODE est un langage de programmation dont l‚Äôexpressivit√© est ind√©niable.&lt;/p&gt;&lt;p&gt;Lui aussi ignor√© √† ses d√©buts, LOLCODE fait un retour fracassant dans le monde des micro-services et syst√®mes distribu√©s. Il commence m√™me √† supplanter Scala comme langage standard pour l‚Äôimpl√©mentation d‚Äôapplications orient√©es ‚ÄúBig Data‚Äù.&lt;/p&gt;&lt;p&gt;&lt;img src="/public/images/fool/LOLCODE.png" alt="LOLCODE vs Scala" /&gt;&lt;/p&gt;&lt;p&gt;Avec de tels arguments, difficile pour nous de faire un choix diff√©rent, et pour vous faire vibrer et vous donner l‚Äôenvie de choisir l‚Äô√©quipe LOLCODE, voici un petit programme qui vous permettra de r√©aliser que LOLCODE est un outil de choix, notamment si vous travaillez avec Kafka.&lt;/p&gt;&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;HAI 1.2 BTW This LOLCODE supports distributed parallelism executionCAN HAS KAFKA?I HAS A p ITZ SRSLY A PURRDUCER I HAS A c ITZ SRSLY A CHEEZSUMER I HAS A topic ITZ A YARN I HAS A iterashunz ITZ A NUMBAR I HAS A meh ITZ A YARN I HAS A recordz ITZ SRSLY LOTZ A YARN AN THAR IZ 32 I HAS A indxz ITZ A NUMBAR I HAS A max ITZ 100VISIBLE "HAI ITZ " ME " I CAN HAS TOPIC?" GIMMEH topicVISIBLE "HAI ITZ " ME " I CAN HAS ITERASHUNZ?" GIMMEH iterashunzDIFFRINT iterashunz AN 42, O RLY? YA RLY VISIBLE "PURRFECT" NO WAI VISIBLE "HAI ITZ " ME " ITERASHUNZ DIFFRINT THAN 42" KTHXBYE OICindexz R 0HUGZIM IN YR loop UPPIN YR i TIL BOTH SAEM i AN iterashunz PURRDUCER YR i AN YR topic MKAY IM OUTTA YR loopIM IN YR loop UPPIN YR time TIL BOTH SAEM time AN max meh R CHEEZSUMER YR topic MKAY DIFFRINT meh AN NOOB, O RLY? YA RLY recordz'Z indxz R meh indxz R SUM OF indxz AN 1 OIC IM OUTTA YR loopVISIBLE "O HAI ITZ " ME ", MAH MESSAGZ IZ:"IM IN YR loop UPPIN YR i TIL BOTH SAEM i AN indxz VISIBLE recordz'Z i IM OUTTA YR loopKTHXBYE &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;h2 id="challenge-et-inscriptions"&gt;Challenge et inscriptions&lt;/h2&gt;&lt;p&gt;Vous l‚Äôaurez compris, pour cette √©dition l‚Äô√©quipe a d√©cid√© de relever le niveau et d‚Äôexp√©rimenter des langages vraiment pens√©s pour la productivit√© et le confort des d√©veloppeurs.&lt;/p&gt;&lt;p&gt;Et pour f√™ter cet √©v√®nement, nous vous proposons un petit challenge: Essayez de r√©soudre ce petit programme Brainfuck de t√™te (ou sur papier) afin de d√©couvrir le lien vers la page d‚Äôinscription du MTDK#7!&lt;/p&gt;&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1 2 3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;++++++++[&amp;gt;+++++++++++++&amp;gt;+++++++++++++++&amp;gt;++++++++++++++&amp;gt;+++++++&amp;gt;++++++&amp;gt;++++++++++++&amp;gt;+++++++++++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;-] &amp;gt;.&amp;gt;----..&amp;gt;.&amp;gt;++.&amp;gt;-..&amp;gt;++.&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;+.&amp;gt;.&amp;gt;&amp;gt;&amp;gt;-.&amp;lt;&amp;lt;&amp;lt;&amp;lt;+++.&amp;gt;+++++.&amp;gt;&amp;gt;&amp;gt;+.&amp;gt;&amp;gt;---------------.&amp;lt;&amp;lt;&amp;lt;&amp;lt;+.&amp;gt;&amp;gt;&amp;gt;&amp;gt;+++++++++++. &amp;lt;&amp;lt;&amp;lt;----.&amp;lt;&amp;lt;+.------. &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;p&gt;Les impatients peuvent &lt;a href="https://bit.ly/IqT6zt"&gt;retrouver la page directement ici!&lt;/a&gt;&lt;/p&gt;&lt;p&gt;N.B. Pour les plus affam√©s, voici un &lt;a href="https://gist.github.com/listochkin/94e2e9af7292a9877fff"&gt;interpr√©teur Brainfuck en LOLCODE&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="r√©f√©rences"&gt;R√©f√©rences&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Brainfuck"&gt;Brainfuck&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/LOLCODE"&gt;LOLCODE&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://arxiv.org/pdf/1703.10242.pdf"&gt;Programmation distribu√©e en LOLCODE&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://copy.sh/brainfuck/"&gt;Brainfuck online editor&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://ascii.cl/"&gt;ASCII Table&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content> <author> <name>Arnaud bos</name> <email>arnaud@monkeypatch.io</email> </author> <category term="MonkeyTechDay"/> <category term="MKTD"/> <category term="Techno"/> <category term="Brainfuck"/> <category term="LOLCODE"/> <summary>MKTD#7 : On a valid√© le sujet du prochain MonkeyTechDay ! #Brainfuck #LOLCODEA peine remis du MKTD#6 sur Flink et Kafka Streams (article √† venir), nous prenons connaissance des retours faits par les participants sur l‚Äôorganisation de l‚Äô√©v√©nement, les technos, les exercices propos√©s et les niveaux des coachs.</summary> </entry> <entry xml:lang="fr"><title>Mktd#5 Seulement 17 mois apr√®s la 1√®re √©dition ! #Go #Rust</title><link href="http://www.monkeypatch.io/en/2018/02/05/MKTDs-articles-6.html" rel="alternate" type="text/html" title="Mktd#5 Seulement 17 mois apr√®s la 1√®re √©dition ! &amp;#35;Go &amp;#35;Rust"/> <published>2018-02-05T00:00:00+00:00</published> <updated>2018-02-05T00:00:00+00:00</updated><id>http://www.monkeypatch.io/en/2018/02/05/MKTDs-articles-6</id> <content type="html" xml:base="http://www.monkeypatch.io/en/2018/02/05/MKTDs-articles-6.html">&lt;h1 id="mktd5--seulement-17-mois-apr√®s-la-1√®re-√©dition--go-rust"&gt;Mktd#5 : Seulement 17 mois apr√®s la 1√®re √©dition ! #Go #Rust&lt;/h1&gt;&lt;p&gt;D√©j√† (et seulement‚Ä¶) 17 mois se sont √©coul√©s depuis la premi√®re exp√©rimentation des MKTD. Pour cette 5√®me √©dition, on se retrouve une fois de plus chez HarryCow pour exp√©rimenter et tester les 2 technologies de plus en plus utilis√©es Golang et Rustlang. &lt;!--more--&gt; &lt;a href="https://twitter.com/kendo5731"&gt;Aur√©lien&lt;/a&gt; et &lt;a href="https://twitter.com/LoganMzz"&gt;Logan&lt;/a&gt; nous avaient pr√©par√© une jolie petite s√©rie de TP pour le matin, et sont repartis sur le jeu du MKTD#4 pour l‚Äôapr√®s-midi.&lt;/p&gt;&lt;p&gt;Lors de cette √©dition, je me suis sentie plus investie que la fois d‚Äôavant et j‚Äôai ador√© organiser l‚Äô√©v√©nement. J‚Äôai dessin√© et imprim√© les stickers des 2 technos Go &amp;amp; Rust revisit√©s ‚Äúfa√ßon Monkey‚Äù. Ils ont plu √† la majorit√© d‚Äôentre vous, certains les ont m√™me coll√©s sur leur Pc !&lt;/p&gt;&lt;h2 id="des-t-shirts-collector"&gt;Des T-shirts ‚Äúcollector‚Äù&lt;/h2&gt; &lt;p&gt;Contrairement au pr√©c√©dent MKTD, les √©diteurs ne nous ont pas envoy√© de t-Shirts ;( Mais, on trouvait sympa d‚Äôen faire gagner. Du coup, on a cr√©√© les n√¥tres : une version pour Rust et une version pour Golang.&lt;/p&gt;&lt;p&gt;On a command√© 4 T-shirts chez My-Design √† Lab√®ge. Pour qu‚Äôils soient au top pour l‚Äô√©v√©nement, la veille-au-soir on a les lav√©s √† 30C¬∞.&lt;/p&gt;&lt;p&gt;Et l√† ! ‚Ä¶ catastrophe‚Ä¶ flocage √† moiti√© parti au lavage.&lt;/p&gt;&lt;p&gt;On n‚Äôest vraiment pas content du prestataire ‚Ä¶ Post √©v√©nement, on a donc recommand√© les T-shirts avec un prestataire de qualit√© (un pour chaque coach et pour chaque gagnant du jeu Twitter). Vous avez bien aim√© l‚Äôid√©e de pouvoir gagner des T-shirts gr√¢ce au d√©fi Twitter que j‚Äôai organis√©. On le refait au prochain ?&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/OMipk40J2oFp8XufgHF8D1G-HZHxky-PtYXazdKo0r0XXIh3LuOw6lO2pxTxSS5wWKDHw20XyGGRRQaMRLsmyFhjzL8zw_ZBkeE-pDhsoOjVrma7R4tzOHJ4TtruFAI-wkZS6lVl3XL3iBZv8ZhQkaylE1CcgW30iuRBYHRS1v2TKQGo8IDBu7IGy_m51V-R-38FcQmOrek04TguVd6HsgLZrmPwyOZjHjSS2UL6-hVr8YTab3GCA8yY2Lf_QcK3_SpeZk8O9MF6oym1pTvJpv_6rUlNOBhzRsBmK6vALexRKWZEThqhbkMClPWdw7IgI0ybRwG-ErHWiyOn5gLm4mS5v7aLYNcoqraG2TFD2BYPNrxWXFJnuK3d9bRb9XxOG1olwaI4UzOqnHidgBzlXbpiPs0mgz3B-DtwtqprOnRSb_EK0dRLFhtzpT123KmNk6nZtxBcrtkN3Kcy_gJZXM1Zs80-X6mB0ALtnt8G8PmQrdlEvKqJVpZnPuxI4-_TwAnMP1YvVmodgWgZlv7c5xLj4w4JZc659mU9AXdQl2i33WaXhmi3DzeveEcB8D8PieOCAcaMBxEE666uxaiwI27pKr47adMG5uZZzrr-_uNJ3B4o-F_QJXavezVXno6jZHg71kQ0ZuNiGfSm3Qok7zriFuf2lBXn=w735-h832-no" alt="Teeshirt Rust Go" /&gt;&lt;/p&gt;&lt;h2 id="repas-et-collations"&gt;Repas et Collations&lt;/h2&gt;&lt;p&gt;On a test√© un nouveau prestataire pour la restauration, avec la prise en compte (comme aux pr√©c√©dents MKTD) des repas v√©g√©tariens, et d‚Äôun repas personnalis√©. Les doses individuelles √©taient suffisantes, assez pour √™tre d‚Äôattaque pour les d√©fis de l‚Äôapr√®s-midi, mais pas trop pour plomber les ventres des participants.&lt;/p&gt;&lt;p&gt;Le reste, comme les collations, √©taient √† disposition tout au long de la journ√©e. On met la dose sur les bananes, le caf√©, ‚Ä¶ et on a observ√© un pic de consommation d‚Äôharibo et des bi√®res !&lt;/p&gt;&lt;h2 id="vos-retours-nous-font-progresser"&gt;Vos retours nous font progresser!&lt;/h2&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/Neig0rjRRVSm_rcAjkK_OcPmPRgAfdlEcpCtfM3uZecgi-JZWQlRk4xzTI-XTiblXOytL1y43UNO2wK9yYh0NXzf1sHTxeQ9q6NVBpy-UIx8GCI9qGHCiN2KLLbY_KdkVTtPhPuDkWEi36Nz6HZygZzgLsOJ_96O5F5ygZTvcV1YtULtPd5FbKf09lWE44nlG3rn7wnc-mIW8oGfPtoe_6huQ7S8sSOtryop7Pw0JOwq1P29J3zB-RMa_-IzvHLmu_G9ie3NlC8jSf4-8JkI7CES9w0n115Q-BnfBQBidcucPv0363yW2652xLVQHAKMI11OvzusefDNBd7dT2LX8ywoSCgA7b8Do7GN8MZvkSaP1O_aQbmYXdRu-FLWqMDH9HRSw5oVuRE4JhhUTk59v-sLTiCNYCj3i2C5OFA8fkFaT1pvA0Qg-k5n0z3DqH-h-8qWAkA2bjghluLu2l3dyOxmQiHB2Otu4qHZ58E0kGiL_hKsA1ZDhn9TFmkHV3TWwl2ZM9w5FJ9UB6P3BDmt7q8G-KvBFWv5I_CiixDLIZ22Z1hlhGvCxXHnVG4Eoo57g-vReTBAluvnKl48ebJO1Skh1iL3KLKmmJQHz8lriEZswo1pBx_5Q6ZMlfZHHUjO78paRMAt19ODgOuKrEoHAlZxiPd-_LG7=w1769-h903-no" alt="MKTD reviews 1" /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/oO8tIFrv25wX6L2yKiCW03l2tVZTx24l87TCd2aFB_ppzDB_C6vRjyjpa25lWlWVqzlw8wAZNhZ5wXNmUCCBHXKmBTbte_YHl14rayUCqyUbwd3jOgZqEFVvzeuUZIss2z4AU9zGGuGhgLOcAlK2iN-Fwk2YNswBnYKGpBquk2YWTseA5nQGfDoJAqE1r8DXlWcX682kTt_6soPnB4kp2RnRhMneK6_JG-SZLDAEQwoyYJa-zXPB81aIW1OGl-3D0TYy8vJx2BECAEz37av-jzfQ5heAqe7h5iDZzOp7B3AbpOzful-ZUt84uzr1NY19ZzUl_zD_BZaW4XBYY4dUcOLaBjpO2o5DgoPzrPhRFoy_xF_x3-BNNe6QfbIGTO3pQbLsJK_2kVNC2qNeqe2SMLcNkU9TQhEwXpkiCL3rqbj3sePYQp19VCXpMZdWtySqMTrytQTh4YTFSFToZBCjU4qG-KrVq8vS1uYEjYccZ7m5aUtEdPwzxfDpCGPMlBl5f8rgV_0NP1mhTm3FIAdH0ZtZ-N6R2odkgOsGAh8Z1wuLnfvWNDYjPGdlNeiQhhbTa59UOESYwtMMeie5nyvkpHc9WJD6nl-6hiBmSByl0jJGnRnzKgoO5u9tgvbI2qjFnVShCJoGXkvylobQjFtA8J4CHT0BdI30=w1239-h722-no" alt="MKTD5 reviews 2" /&gt;&lt;/p&gt;&lt;p&gt;Avoir les retours et avis des participants en fin de journ√©e est une agr√©able r√©compense. Vous nous avez fait nous rendre compte que les exos de l‚Äôapr√®s-midi, trop orient√©s IA, ne sont pas forc√©ment les plus adapt√©s √† la d√©couverte d‚Äôun langage et qu‚Äôil faut que l‚Äôon essaie de trouver une solution pour am√©liorer le r√©seau Wifi. On a bien conscience que le Wifi est super important pour assurer le bon d√©roulement de l‚Äô√©v√©nement. On va essayer de trouver une solution avec Beno√Æt de HarryCow sinon il nous faudra changer de lieu.&lt;/p&gt;&lt;p&gt;La table ronde o√π l‚Äôon peut poser ses questions aux coachs a une fois de plus √©t√© tr√®s appr√©ci√©e.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/rVcINIzvJ9QRaL95r8QdfRvKjSd7v8WrBB0zesrOJdMOvjLnCd8DtvWNmhHz0IseCteLHfUQREY9u1k5wKQJcgYrsjH9FyFlLav9_OFK7_sP36h8Q8SyCfBvOHAbUMcKDL-xXRAF9AsHVpOtrrwqPSS2ictl0S168ANWX82vXAU1kGY9wXCOIbJUvU4gxoR6zPpwFvvXsR2WqWWdZpCRSwMruacjW5-ZVlEZe46d68qrVCo_lLwwrcbzZfQgsA-c53iQA8_PjsnBqG9fXc_D4bEZFSf5QSP4NcufXr3bZ6Vi9cEO_jFYSpu8huoRAxJSZ4y1g57qgrg8f8_tBGahXiBv7qVgtlJqzUmhTPkVJovYGom-MbI4oSyBMCtUSLTmb7n_FwbeGx6knJjYU5DtHu8pFNAJ4U67chAdFLD4lTPr2KYJ-L4zCsqYMT1Pt1QWI3jxtGH6teIjKh8XO7VZgwpDa6LYk_ufGxnnfRQmQmo7gJjmmg9jcGNu9q8jzyosDO4BLsXxqnqn6tIJLjN9AtfC17A5syOWnLEjfhPm4Ni7ay_tJSgsVY1E8PR90pSubl6pp-cbhvBtnwppNj2RtPb4Olv-aQh3jNJwzsgCZ-BGVeytUKG14KzZcMJ-_BxtBg1A3Msq9CqxAgyFymQsfG9FBARgwK94=w963-h722-no" alt="" /&gt;&lt;/p&gt;&lt;p&gt;‚Üê revenir √† &lt;a href="/2018/02/05/MKTDs-articles-1.html"&gt;l‚Äôarticle principal&lt;/a&gt; ‚Üí Article pr√©c√©dent &lt;a href="/2018/02/05/MKTDs-articles-5.html"&gt;MKTD#4&lt;/a&gt;&lt;/p&gt;</content> <author> <name>Alteanne Fernandez</name> <email>alteanne@monkeypatch.io</email> </author> <author> <name>Matthieu Caylet</name> <email>matthieu@monkeypatch.io</email> </author> <category term="MonkeyTechDay"/> <category term="Tech days"/> <category term="MKTD"/> <category term="Tech Addicts"/> <category term="Techno"/> <category term="go"/> <category term="rust"/> <summary>Mktd#5 : Seulement 17 mois apr√®s la 1√®re √©dition ! #Go #RustD√©j√† (et seulement‚Ä¶) 17 mois se sont √©coul√©s depuis la premi√®re exp√©rimentation des MKTD. Pour cette 5√®me √©dition, on se retrouve une fois de plus chez HarryCow pour exp√©rimenter et tester les 2 technologies de plus en plus utilis√©es Golang et Rustlang.</summary> </entry> </feed>